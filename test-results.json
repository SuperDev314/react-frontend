{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":25,"numPassedTests":190,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTotalTestSuites":25,"numTotalTests":190,"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":20,"total":20,"unchecked":0,"unmatched":0,"updated":0},"startTime":1508127942441,"success":true,"testResults":[{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"perfStats":{"end":1508127944870,"start":1508127943910},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/models/test/ThemeProvider.test.js","testResults":[{"ancestorTitles":["ThemeProvider"],"duration":12,"failureMessages":[],"fullName":"ThemeProvider should not throw an error when no children are passed","numPassingAsserts":0,"status":"passed","title":"should not throw an error when no children are passed"},{"ancestorTitles":["ThemeProvider"],"duration":3,"failureMessages":[],"fullName":"ThemeProvider should accept a theme prop that's a plain object","numPassingAsserts":0,"status":"passed","title":"should accept a theme prop that's a plain object"},{"ancestorTitles":["ThemeProvider"],"duration":7,"failureMessages":[],"fullName":"ThemeProvider should render its child","numPassingAsserts":0,"status":"passed","title":"should render its child"},{"ancestorTitles":["ThemeProvider"],"duration":13,"failureMessages":[],"fullName":"ThemeProvider should merge its theme with an outer theme","numPassingAsserts":0,"status":"passed","title":"should merge its theme with an outer theme"},{"ancestorTitles":["ThemeProvider"],"duration":2,"failureMessages":[],"fullName":"ThemeProvider should merge its theme with multiple outer themes","numPassingAsserts":0,"status":"passed","title":"should merge its theme with multiple outer themes"},{"ancestorTitles":["ThemeProvider"],"duration":4,"failureMessages":[],"fullName":"ThemeProvider should be able to render two independent themes","numPassingAsserts":0,"status":"passed","title":"should be able to render two independent themes"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"perfStats":{"end":1508127944918,"start":1508127943913},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/no-parser/test/basic.test.js","testResults":[{"ancestorTitles":["basic"],"duration":21,"failureMessages":[],"fullName":"basic should throw a meaningful error when called with null","numPassingAsserts":0,"status":"passed","title":"should throw a meaningful error when called with null"},{"ancestorTitles":["basic"],"duration":30,"failureMessages":[],"fullName":"basic should correctly assemble preprocessed CSS","numPassingAsserts":0,"status":"passed","title":"should correctly assemble preprocessed CSS"},{"ancestorTitles":["basic"],"duration":7,"failureMessages":[],"fullName":"basic should correctly execute passed functions and assemble preprocessed CSS","numPassingAsserts":0,"status":"passed","title":"should correctly execute passed functions and assemble preprocessed CSS"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"perfStats":{"end":1508127944961,"start":1508127943904},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/constructors/test/injectGlobal.test.js","testResults":[{"ancestorTitles":["injectGlobal"],"duration":29,"failureMessages":[],"fullName":"injectGlobal should inject rules into the head","numPassingAsserts":0,"status":"passed","title":"should inject rules into the head"},{"ancestorTitles":["injectGlobal"],"duration":5,"failureMessages":[],"fullName":"injectGlobal should non-destructively inject styles when called repeatedly","numPassingAsserts":0,"status":"passed","title":"should non-destructively inject styles when called repeatedly"},{"ancestorTitles":["injectGlobal"],"duration":19,"failureMessages":[],"fullName":"injectGlobal should non-destructively inject styles when called after a component","numPassingAsserts":0,"status":"passed","title":"should non-destructively inject styles when called after a component"}],"sourceMaps":{},"skipped":false},{"console":[{"message":"Warning: Unknown prop `activeClassName` on <a> tag. Remove this prop from the element. For details, see https://fb.me/react-unknown-prop\n    in a","origin":"/Users/cferris/src/styled-components/node_modules/fbjs/lib/warning.js:36","type":"error"}],"failureMessage":null,"numFailingTests":0,"numPassingTests":14,"numPendingTests":0,"perfStats":{"end":1508127944985,"start":1508127943891},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/test/attrs.test.js","testResults":[{"ancestorTitles":["attrs"],"duration":53,"failureMessages":[],"fullName":"attrs work fine with an empty object","numPassingAsserts":0,"status":"passed","title":"work fine with an empty object"},{"ancestorTitles":["attrs"],"duration":5,"failureMessages":[],"fullName":"attrs pass a simple attr","numPassingAsserts":0,"status":"passed","title":"pass a simple attr"},{"ancestorTitles":["attrs"],"duration":8,"failureMessages":[],"fullName":"attrs call an attr function","numPassingAsserts":0,"status":"passed","title":"call an attr function"},{"ancestorTitles":["attrs"],"duration":4,"failureMessages":[],"fullName":"attrs pass props to the attr function","numPassingAsserts":0,"status":"passed","title":"pass props to the attr function"},{"ancestorTitles":["attrs"],"duration":5,"failureMessages":[],"fullName":"attrs should replace attrs with props","numPassingAsserts":0,"status":"passed","title":"should replace attrs with props"},{"ancestorTitles":["attrs"],"duration":5,"failureMessages":[],"fullName":"attrs should merge className","numPassingAsserts":0,"status":"passed","title":"should merge className"},{"ancestorTitles":["attrs"],"duration":5,"failureMessages":[],"fullName":"attrs should merge className even if its a function","numPassingAsserts":0,"status":"passed","title":"should merge className even if its a function"},{"ancestorTitles":["attrs"],"duration":3,"failureMessages":[],"fullName":"attrs should work with data and aria attributes","numPassingAsserts":0,"status":"passed","title":"should work with data and aria attributes"},{"ancestorTitles":["attrs"],"duration":2,"failureMessages":[],"fullName":"attrs merge attrs","numPassingAsserts":0,"status":"passed","title":"merge attrs"},{"ancestorTitles":["attrs"],"duration":3,"failureMessages":[],"fullName":"attrs merge attrs when inheriting SC","numPassingAsserts":0,"status":"passed","title":"merge attrs when inheriting SC"},{"ancestorTitles":["attrs"],"duration":7,"failureMessages":[],"fullName":"attrs pass attrs to style block","numPassingAsserts":0,"status":"passed","title":"pass attrs to style block"},{"ancestorTitles":["attrs"],"duration":6,"failureMessages":[],"fullName":"attrs should pass through children as a normal prop","numPassingAsserts":0,"status":"passed","title":"should pass through children as a normal prop"},{"ancestorTitles":["attrs"],"duration":5,"failureMessages":[],"fullName":"attrs should pass through complex children as well","numPassingAsserts":0,"status":"passed","title":"should pass through complex children as well"},{"ancestorTitles":["attrs"],"duration":3,"failureMessages":[],"fullName":"attrs should override children of course","numPassingAsserts":0,"status":"passed","title":"should override children of course"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"perfStats":{"end":1508127944994,"start":1508127943905},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/test/expanded-api.test.js","testResults":[{"ancestorTitles":["expanded api","displayName"],"duration":33,"failureMessages":[],"fullName":"expanded api displayName should be auto-generated if none passed","numPassingAsserts":0,"status":"passed","title":"should be auto-generated if none passed"},{"ancestorTitles":["expanded api","displayName"],"duration":7,"failureMessages":[],"fullName":"expanded api displayName should be attached if supplied","numPassingAsserts":0,"status":"passed","title":"should be attached if supplied"},{"ancestorTitles":["expanded api","componentId"],"duration":24,"failureMessages":[],"fullName":"expanded api componentId should be generated as \"sc\" + hash","numPassingAsserts":0,"status":"passed","title":"should be generated as \"sc\" + hash"},{"ancestorTitles":["expanded api","componentId"],"duration":5,"failureMessages":[],"fullName":"expanded api componentId should be generated from displayName + hash","numPassingAsserts":0,"status":"passed","title":"should be generated from displayName + hash"},{"ancestorTitles":["expanded api","componentId"],"duration":5,"failureMessages":[],"fullName":"expanded api componentId should be attached if passed in","numPassingAsserts":0,"status":"passed","title":"should be attached if passed in"},{"ancestorTitles":["expanded api","componentId"],"duration":5,"failureMessages":[],"fullName":"expanded api componentId should be combined with displayName if both passed in","numPassingAsserts":0,"status":"passed","title":"should be combined with displayName if both passed in"},{"ancestorTitles":["expanded api","componentId"],"duration":9,"failureMessages":[],"fullName":"expanded api componentId should work with `.extend`","numPassingAsserts":0,"status":"passed","title":"should work with `.extend`"},{"ancestorTitles":["expanded api","componentId"],"duration":5,"failureMessages":[],"fullName":"expanded api componentId should work with `.withComponent`","numPassingAsserts":0,"status":"passed","title":"should work with `.withComponent`"},{"ancestorTitles":["expanded api","chaining"],"duration":2,"failureMessages":[],"fullName":"expanded api chaining should merge the options strings","numPassingAsserts":0,"status":"passed","title":"should merge the options strings"},{"ancestorTitles":["expanded api","chaining"],"duration":5,"failureMessages":[],"fullName":"expanded api chaining should keep the last value passed in when merging","numPassingAsserts":0,"status":"passed","title":"should keep the last value passed in when merging"}],"sourceMaps":{},"skipped":false},{"console":[{"message":"[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps","origin":"/Users/cferris/src/styled-components/src/hoc/withTheme.js:40","type":"warn"}],"failureMessage":null,"numFailingTests":0,"numPassingTests":21,"numPendingTests":0,"perfStats":{"end":1508127945123,"start":1508127943893},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/test/theme.test.js","testResults":[{"ancestorTitles":["theming"],"duration":74,"failureMessages":[],"fullName":"theming should inject props.theme into a styled component","numPassingAsserts":0,"status":"passed","title":"should inject props.theme into a styled component"},{"ancestorTitles":["theming"],"duration":11,"failureMessages":[],"fullName":"theming should inject props.theme into a styled component multiple levels deep","numPassingAsserts":0,"status":"passed","title":"should inject props.theme into a styled component multiple levels deep"},{"ancestorTitles":["theming"],"duration":4,"failureMessages":[],"fullName":"theming should properly allow a component to fallback to its default props when a theme is not provided","numPassingAsserts":0,"status":"passed","title":"should properly allow a component to fallback to its default props when a theme is not provided"},{"ancestorTitles":["theming"],"duration":3,"failureMessages":[],"fullName":"theming should use ThemeProvider theme instead of defaultProps theme","numPassingAsserts":0,"status":"passed","title":"should use ThemeProvider theme instead of defaultProps theme"},{"ancestorTitles":["theming"],"duration":4,"failureMessages":[],"fullName":"theming should properly allow a component to override the theme with a prop even if it is equal to defaultProps theme","numPassingAsserts":0,"status":"passed","title":"should properly allow a component to override the theme with a prop even if it is equal to defaultProps theme"},{"ancestorTitles":["theming"],"duration":4,"failureMessages":[],"fullName":"theming should properly allow a component to override the theme with a prop","numPassingAsserts":0,"status":"passed","title":"should properly allow a component to override the theme with a prop"},{"ancestorTitles":["theming"],"duration":3,"failureMessages":[],"fullName":"theming should properly set the theme with an empty object when no theme is provided and no defaults are set","numPassingAsserts":0,"status":"passed","title":"should properly set the theme with an empty object when no theme is provided and no defaults are set"},{"ancestorTitles":["theming"],"duration":7,"failureMessages":[],"fullName":"theming should only inject props.theme into styled components within its child component tree","numPassingAsserts":0,"status":"passed","title":"should only inject props.theme into styled components within its child component tree"},{"ancestorTitles":["theming"],"duration":4,"failureMessages":[],"fullName":"theming should inject props.theme into all styled components within the child component tree","numPassingAsserts":0,"status":"passed","title":"should inject props.theme into all styled components within the child component tree"},{"ancestorTitles":["theming"],"duration":11,"failureMessages":[],"fullName":"theming should inject new CSS when the theme changes","numPassingAsserts":0,"status":"passed","title":"should inject new CSS when the theme changes"},{"ancestorTitles":["theming"],"duration":24,"failureMessages":[],"fullName":"theming should properly render with the same theme from default props on re-render","numPassingAsserts":0,"status":"passed","title":"should properly render with the same theme from default props on re-render"},{"ancestorTitles":["theming"],"duration":8,"failureMessages":[],"fullName":"theming should properly update style if theme is changed","numPassingAsserts":0,"status":"passed","title":"should properly update style if theme is changed"},{"ancestorTitles":["theming"],"duration":7,"failureMessages":[],"fullName":"theming should properly update style if props used in styles is changed","numPassingAsserts":0,"status":"passed","title":"should properly update style if props used in styles is changed"},{"ancestorTitles":["theming"],"duration":17,"failureMessages":[],"fullName":"theming should change the classnames when the theme changes","numPassingAsserts":0,"status":"passed","title":"should change the classnames when the theme changes"},{"ancestorTitles":["theming"],"duration":6,"failureMessages":[],"fullName":"theming should inject props.theme into a component that uses withTheme hoc","numPassingAsserts":0,"status":"passed","title":"should inject props.theme into a component that uses withTheme hoc"},{"ancestorTitles":["theming"],"duration":6,"failureMessages":[],"fullName":"theming should properly update theme prop on hoc component when theme is changed","numPassingAsserts":0,"status":"passed","title":"should properly update theme prop on hoc component when theme is changed"},{"ancestorTitles":["theming"],"duration":8,"failureMessages":[],"fullName":"theming should use ThemeProvider theme instead of defaultProps theme after initial render","numPassingAsserts":0,"status":"passed","title":"should use ThemeProvider theme instead of defaultProps theme after initial render"},{"ancestorTitles":["theming"],"duration":1,"failureMessages":[],"fullName":"theming should hoist static properties when using withTheme","numPassingAsserts":0,"status":"passed","title":"should hoist static properties when using withTheme"},{"ancestorTitles":["theming"],"duration":7,"failureMessages":[],"fullName":"theming should accept innerRef and pass it on as ref","numPassingAsserts":0,"status":"passed","title":"should accept innerRef and pass it on as ref"},{"ancestorTitles":["theming"],"duration":5,"failureMessages":[],"fullName":"theming should accept innerRef and pass it on for styled components","numPassingAsserts":0,"status":"passed","title":"should accept innerRef and pass it on for styled components"},{"ancestorTitles":["theming"],"duration":8,"failureMessages":[],"fullName":"theming should not break without a ThemeProvier if it has a defaultTheme","numPassingAsserts":0,"status":"passed","title":"should not break without a ThemeProvier if it has a defaultTheme"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"perfStats":{"end":1508127945292,"start":1508127945032},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/test/props.test.js","testResults":[{"ancestorTitles":["props"],"duration":8,"failureMessages":[],"fullName":"props should execute interpolations and fall back","numPassingAsserts":0,"status":"passed","title":"should execute interpolations and fall back"},{"ancestorTitles":["props"],"duration":4,"failureMessages":[],"fullName":"props should execute interpolations and inject props","numPassingAsserts":0,"status":"passed","title":"should execute interpolations and inject props"},{"ancestorTitles":["props"],"duration":3,"failureMessages":[],"fullName":"props should ignore non-0 falsy object interpolations","numPassingAsserts":0,"status":"passed","title":"should ignore non-0 falsy object interpolations"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":13,"numPendingTests":0,"perfStats":{"end":1508127945293,"start":1508127944991},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/test/styles.test.js","testResults":[{"ancestorTitles":["with styles"],"duration":11,"failureMessages":[],"fullName":"with styles should append a style","numPassingAsserts":0,"status":"passed","title":"should append a style"},{"ancestorTitles":["with styles"],"duration":3,"failureMessages":[],"fullName":"with styles should append multiple styles","numPassingAsserts":0,"status":"passed","title":"should append multiple styles"},{"ancestorTitles":["with styles"],"duration":3,"failureMessages":[],"fullName":"with styles should handle inline style objects","numPassingAsserts":0,"status":"passed","title":"should handle inline style objects"},{"ancestorTitles":["with styles"],"duration":14,"failureMessages":[],"fullName":"with styles should handle inline style objects with media queries","numPassingAsserts":0,"status":"passed","title":"should handle inline style objects with media queries"},{"ancestorTitles":["with styles"],"duration":4,"failureMessages":[],"fullName":"with styles should handle inline style objects with pseudo selectors","numPassingAsserts":0,"status":"passed","title":"should handle inline style objects with pseudo selectors"},{"ancestorTitles":["with styles"],"duration":5,"failureMessages":[],"fullName":"with styles should handle inline style objects with pseudo selectors","numPassingAsserts":0,"status":"passed","title":"should handle inline style objects with pseudo selectors"},{"ancestorTitles":["with styles"],"duration":3,"failureMessages":[],"fullName":"with styles should handle inline style objects with nesting","numPassingAsserts":0,"status":"passed","title":"should handle inline style objects with nesting"},{"ancestorTitles":["with styles"],"duration":5,"failureMessages":[],"fullName":"with styles should handle inline style objects with contextual selectors","numPassingAsserts":0,"status":"passed","title":"should handle inline style objects with contextual selectors"},{"ancestorTitles":["with styles"],"duration":3,"failureMessages":[],"fullName":"with styles should inject styles of multiple components","numPassingAsserts":0,"status":"passed","title":"should inject styles of multiple components"},{"ancestorTitles":["with styles"],"duration":4,"failureMessages":[],"fullName":"with styles should inject styles of multiple components based on creation, not rendering order","numPassingAsserts":0,"status":"passed","title":"should inject styles of multiple components based on creation, not rendering order"},{"ancestorTitles":["with styles"],"duration":3,"failureMessages":[],"fullName":"with styles should strip a JS-style (invalid) comment in the styles","numPassingAsserts":0,"status":"passed","title":"should strip a JS-style (invalid) comment in the styles"},{"ancestorTitles":["with styles"],"duration":3,"failureMessages":[],"fullName":"with styles should add a webpack nonce to the style tags if one is available in the global scope","numPassingAsserts":0,"status":"passed","title":"should add a webpack nonce to the style tags if one is available in the global scope"},{"ancestorTitles":["with styles"],"duration":4,"failureMessages":[],"fullName":"with styles should add a webpack nonce to the global style tags if one is available in the global scope","numPassingAsserts":0,"status":"passed","title":"should add a webpack nonce to the global style tags if one is available in the global scope"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":12,"numPendingTests":0,"perfStats":{"end":1508127945315,"start":1508127944905},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/test/basic.test.js","testResults":[{"ancestorTitles":["basic"],"duration":24,"failureMessages":[],"fullName":"basic should not throw an error when called","numPassingAsserts":0,"status":"passed","title":"should not throw an error when called"},{"ancestorTitles":["basic"],"duration":5,"failureMessages":[],"fullName":"basic should throw a meaningful error when called with null","numPassingAsserts":0,"status":"passed","title":"should throw a meaningful error when called with null"},{"ancestorTitles":["basic"],"duration":3,"failureMessages":[],"fullName":"basic should not inject anything by default","numPassingAsserts":0,"status":"passed","title":"should not inject anything by default"},{"ancestorTitles":["basic"],"duration":12,"failureMessages":[],"fullName":"basic should inject component class when rendered even if no styles are passed","numPassingAsserts":0,"status":"passed","title":"should inject component class when rendered even if no styles are passed"},{"ancestorTitles":["basic"],"duration":4,"failureMessages":[],"fullName":"basic should inject styles","numPassingAsserts":0,"status":"passed","title":"should inject styles"},{"ancestorTitles":["basic"],"duration":4,"failureMessages":[],"fullName":"basic should inject only once for a styled component, no matter how often it's mounted","numPassingAsserts":0,"status":"passed","title":"should inject only once for a styled component, no matter how often it's mounted"},{"ancestorTitles":["basic"],"duration":5,"failureMessages":[],"fullName":"basic Should have the correct styled(component) displayName","numPassingAsserts":0,"status":"passed","title":"Should have the correct styled(component) displayName"},{"ancestorTitles":["basic","jsdom tests"],"duration":18,"failureMessages":[],"fullName":"basic jsdom tests should pass the ref to the component","numPassingAsserts":0,"status":"passed","title":"should pass the ref to the component"},{"ancestorTitles":["basic","jsdom tests"],"duration":13,"failureMessages":[],"fullName":"basic jsdom tests should not leak the innerRef prop to the wrapped child","numPassingAsserts":0,"status":"passed","title":"should not leak the innerRef prop to the wrapped child"},{"ancestorTitles":["basic","jsdom tests"],"duration":4,"failureMessages":[],"fullName":"basic jsdom tests should pass the full className to the wrapped child","numPassingAsserts":0,"status":"passed","title":"should pass the full className to the wrapped child"},{"ancestorTitles":["basic","jsdom tests"],"duration":5,"failureMessages":[],"fullName":"basic jsdom tests should pass the innerRef to the wrapped styled component","numPassingAsserts":0,"status":"passed","title":"should pass the innerRef to the wrapped styled component"},{"ancestorTitles":["basic","jsdom tests"],"duration":7,"failureMessages":[],"fullName":"basic jsdom tests should respect the order of StyledComponent creation for CSS ordering","numPassingAsserts":0,"status":"passed","title":"should respect the order of StyledComponent creation for CSS ordering"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":14,"numPendingTests":0,"perfStats":{"end":1508127945324,"start":1508127945020},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/test/extending.test.js","testResults":[{"ancestorTitles":["extending"],"duration":8,"failureMessages":[],"fullName":"extending should generate empty classes with no styles","numPassingAsserts":0,"status":"passed","title":"should generate empty classes with no styles"},{"ancestorTitles":["extending"],"duration":4,"failureMessages":[],"fullName":"extending should attach styles to both classes if only parent has styles","numPassingAsserts":0,"status":"passed","title":"should attach styles to both classes if only parent has styles"},{"ancestorTitles":["extending"],"duration":4,"failureMessages":[],"fullName":"extending should attach styles to child class if only child has styles","numPassingAsserts":0,"status":"passed","title":"should attach styles to child class if only child has styles"},{"ancestorTitles":["extending"],"duration":2,"failureMessages":[],"fullName":"extending should generate a class for the child with the rules of the parent","numPassingAsserts":0,"status":"passed","title":"should generate a class for the child with the rules of the parent"},{"ancestorTitles":["extending"],"duration":3,"failureMessages":[],"fullName":"extending should generate different classes for both parent and child","numPassingAsserts":0,"status":"passed","title":"should generate different classes for both parent and child"},{"ancestorTitles":["extending"],"duration":4,"failureMessages":[],"fullName":"extending should copy nested rules to the child","numPassingAsserts":0,"status":"passed","title":"should copy nested rules to the child"},{"ancestorTitles":["extending"],"duration":4,"failureMessages":[],"fullName":"extending should keep default props from parent","numPassingAsserts":0,"status":"passed","title":"should keep default props from parent"},{"ancestorTitles":["extending"],"duration":2,"failureMessages":[],"fullName":"extending should keep prop types from parent","numPassingAsserts":0,"status":"passed","title":"should keep prop types from parent"},{"ancestorTitles":["extending"],"duration":2,"failureMessages":[],"fullName":"extending should keep custom static member from parent","numPassingAsserts":0,"status":"passed","title":"should keep custom static member from parent"},{"ancestorTitles":["extending"],"duration":3,"failureMessages":[],"fullName":"extending should keep static member in triple inheritance","numPassingAsserts":0,"status":"passed","title":"should keep static member in triple inheritance"},{"ancestorTitles":["extending"],"duration":5,"failureMessages":[],"fullName":"extending should keep styles in >= 3 inheritances","numPassingAsserts":0,"status":"passed","title":"should keep styles in >= 3 inheritances"},{"ancestorTitles":["extending"],"duration":4,"failureMessages":[],"fullName":"extending should allow changing component","numPassingAsserts":0,"status":"passed","title":"should allow changing component"},{"ancestorTitles":["extending"],"duration":4,"failureMessages":[],"fullName":"extending should allow changing component and extending","numPassingAsserts":0,"status":"passed","title":"should allow changing component and extending"},{"ancestorTitles":["extending"],"duration":3,"failureMessages":[],"fullName":"extending should allow changing component and adding attributes","numPassingAsserts":0,"status":"passed","title":"should allow changing component and adding attributes"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":21,"numPendingTests":0,"perfStats":{"end":1508127945330,"start":1508127944961},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/test/rehydration.test.js","testResults":[{"ancestorTitles":["rehydration","with existing styled components"],"duration":9,"failureMessages":[],"fullName":"rehydration with existing styled components should preserve the styles","numPassingAsserts":0,"status":"passed","title":"should preserve the styles"},{"ancestorTitles":["rehydration","with existing styled components"],"duration":9,"failureMessages":[],"fullName":"rehydration with existing styled components should append a new component like normal","numPassingAsserts":0,"status":"passed","title":"should append a new component like normal"},{"ancestorTitles":["rehydration","with existing styled components"],"duration":6,"failureMessages":[],"fullName":"rehydration with existing styled components should reuse a componentId","numPassingAsserts":0,"status":"passed","title":"should reuse a componentId"},{"ancestorTitles":["rehydration","with existing styled components"],"duration":18,"failureMessages":[],"fullName":"rehydration with existing styled components should reuse a componentId and generated class","numPassingAsserts":0,"status":"passed","title":"should reuse a componentId and generated class"},{"ancestorTitles":["rehydration","with existing styled components"],"duration":5,"failureMessages":[],"fullName":"rehydration with existing styled components should reuse a componentId and inject new classes","numPassingAsserts":0,"status":"passed","title":"should reuse a componentId and inject new classes"},{"ancestorTitles":["rehydration","with styled components with props"],"duration":4,"failureMessages":[],"fullName":"rehydration with styled components with props should preserve the styles","numPassingAsserts":0,"status":"passed","title":"should preserve the styles"},{"ancestorTitles":["rehydration","with styled components with props"],"duration":5,"failureMessages":[],"fullName":"rehydration with styled components with props should not inject new styles for a component already rendered","numPassingAsserts":0,"status":"passed","title":"should not inject new styles for a component already rendered"},{"ancestorTitles":["rehydration","with styled components with props"],"duration":4,"failureMessages":[],"fullName":"rehydration with styled components with props should inject new styles for a new computed style of a component","numPassingAsserts":0,"status":"passed","title":"should inject new styles for a new computed style of a component"},{"ancestorTitles":["rehydration","with inline styles that werent rendered by us"],"duration":2,"failureMessages":[],"fullName":"rehydration with inline styles that werent rendered by us should leave the existing styles there","numPassingAsserts":0,"status":"passed","title":"should leave the existing styles there"},{"ancestorTitles":["rehydration","with inline styles that werent rendered by us"],"duration":4,"failureMessages":[],"fullName":"rehydration with inline styles that werent rendered by us should generate new classes, even if they have the same name","numPassingAsserts":0,"status":"passed","title":"should generate new classes, even if they have the same name"},{"ancestorTitles":["rehydration","with global styles"],"duration":2,"failureMessages":[],"fullName":"rehydration with global styles should leave the existing styles there","numPassingAsserts":0,"status":"passed","title":"should leave the existing styles there"},{"ancestorTitles":["rehydration","with global styles"],"duration":4,"failureMessages":[],"fullName":"rehydration with global styles should inject new global styles at the end","numPassingAsserts":0,"status":"passed","title":"should inject new global styles at the end"},{"ancestorTitles":["rehydration","with global styles"],"duration":3,"failureMessages":[],"fullName":"rehydration with global styles should interleave global and local styles","numPassingAsserts":0,"status":"passed","title":"should interleave global and local styles"},{"ancestorTitles":["rehydration","with all styles already rendered"],"duration":3,"failureMessages":[],"fullName":"rehydration with all styles already rendered should not touch existing styles","numPassingAsserts":0,"status":"passed","title":"should not touch existing styles"},{"ancestorTitles":["rehydration","with all styles already rendered"],"duration":11,"failureMessages":[],"fullName":"rehydration with all styles already rendered should replace stylesheets on-demand","numPassingAsserts":0,"status":"passed","title":"should replace stylesheets on-demand"},{"ancestorTitles":["rehydration","with all styles already rendered"],"duration":4,"failureMessages":[],"fullName":"rehydration with all styles already rendered should not change styles if rendered in the same order they were created with","numPassingAsserts":0,"status":"passed","title":"should not change styles if rendered in the same order they were created with"},{"ancestorTitles":["rehydration","with all styles already rendered"],"duration":4,"failureMessages":[],"fullName":"rehydration with all styles already rendered should still not change styles if rendered in a different order","numPassingAsserts":0,"status":"passed","title":"should still not change styles if rendered in a different order"},{"ancestorTitles":["rehydration","with keyframes"],"duration":3,"failureMessages":[],"fullName":"rehydration with keyframes should not touch existing styles","numPassingAsserts":0,"status":"passed","title":"should not touch existing styles"},{"ancestorTitles":["rehydration","with keyframes"],"duration":3,"failureMessages":[],"fullName":"rehydration with keyframes should not regenerate keyframes","numPassingAsserts":0,"status":"passed","title":"should not regenerate keyframes"},{"ancestorTitles":["rehydration","with keyframes"],"duration":4,"failureMessages":[],"fullName":"rehydration with keyframes should still inject new keyframes","numPassingAsserts":0,"status":"passed","title":"should still inject new keyframes"},{"ancestorTitles":["rehydration","with keyframes"],"duration":9,"failureMessages":[],"fullName":"rehydration with keyframes should pass the keyframes name along as well","numPassingAsserts":0,"status":"passed","title":"should pass the keyframes name along as well"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"perfStats":{"end":1508127945363,"start":1508127943895},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/test/warnTooManyClasses.test.js","testResults":[{"ancestorTitles":["warn too many classes"],"duration":259,"failureMessages":[],"fullName":"warn too many classes should warn once","numPassingAsserts":0,"status":"passed","title":"should warn once"},{"ancestorTitles":["warn too many classes"],"duration":131,"failureMessages":[],"fullName":"warn too many classes should warn if number of classes is 200","numPassingAsserts":0,"status":"passed","title":"should warn if number of classes is 200"},{"ancestorTitles":["warn too many classes"],"duration":106,"failureMessages":[],"fullName":"warn too many classes should not warn if number of classes is below 200","numPassingAsserts":0,"status":"passed","title":"should not warn if number of classes is below 200"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"perfStats":{"end":1508127945420,"start":1508127945152},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/test/css.test.js","testResults":[{"ancestorTitles":["css features"],"duration":19,"failureMessages":[],"fullName":"css features should add vendor prefixes in the right order","numPassingAsserts":0,"status":"passed","title":"should add vendor prefixes in the right order"},{"ancestorTitles":["css features"],"duration":5,"failureMessages":[],"fullName":"css features should add vendor prefixes for display","numPassingAsserts":0,"status":"passed","title":"should add vendor prefixes for display"},{"ancestorTitles":["css features"],"duration":5,"failureMessages":[],"fullName":"css features should pass through custom properties","numPassingAsserts":0,"status":"passed","title":"should pass through custom properties"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"perfStats":{"end":1508127945429,"start":1508127945320},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/constructors/test/styled.test.js","testResults":[{"ancestorTitles":["styled"],"duration":41,"failureMessages":[],"fullName":"styled should have all valid HTML5 elements defined as properties","numPassingAsserts":0,"status":"passed","title":"should have all valid HTML5 elements defined as properties"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"perfStats":{"end":1508127945439,"start":1508127945354},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/constructors/test/keyframes.test.js","testResults":[{"ancestorTitles":["keyframes"],"duration":8,"failureMessages":[],"fullName":"keyframes should return its name","numPassingAsserts":0,"status":"passed","title":"should return its name"},{"ancestorTitles":["keyframes"],"duration":3,"failureMessages":[],"fullName":"keyframes should insert the correct styles","numPassingAsserts":0,"status":"passed","title":"should insert the correct styles"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"perfStats":{"end":1508127945470,"start":1508127945339},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/utils/test/validAttr.test.js","testResults":[{"ancestorTitles":["validAttr"],"duration":14,"failureMessages":[],"fullName":"validAttr should allow all the reactProps","numPassingAsserts":0,"status":"passed","title":"should allow all the reactProps"},{"ancestorTitles":["validAttr"],"duration":25,"failureMessages":[],"fullName":"validAttr should allow all the html props","numPassingAsserts":0,"status":"passed","title":"should allow all the html props"},{"ancestorTitles":["validAttr"],"duration":16,"failureMessages":[],"fullName":"validAttr should handle all the SVG props","numPassingAsserts":0,"status":"passed","title":"should handle all the SVG props"},{"ancestorTitles":["validAttr"],"duration":1,"failureMessages":[],"fullName":"validAttr should handle aria and data attributes","numPassingAsserts":0,"status":"passed","title":"should handle aria and data attributes"},{"ancestorTitles":["validAttr"],"duration":0,"failureMessages":[],"fullName":"validAttr should handle uppercase aria and data attributes","numPassingAsserts":0,"status":"passed","title":"should handle uppercase aria and data attributes"},{"ancestorTitles":["validAttr"],"duration":14,"failureMessages":[],"fullName":"validAttr should allow all the event handlers","numPassingAsserts":0,"status":"passed","title":"should allow all the event handlers"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"perfStats":{"end":1508127945487,"start":1508127945398},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/no-parser/test/keyframes.test.js","testResults":[{"ancestorTitles":["keyframes"],"duration":6,"failureMessages":[],"fullName":"keyframes should correctly assemble preprocessed CSS","numPassingAsserts":0,"status":"passed","title":"should correctly assemble preprocessed CSS"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"perfStats":{"end":1508127945516,"start":1508127945458},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/utils/test/extractCompsFromCSS.test.js","testResults":[{"ancestorTitles":["extractCompsFromCSS"],"duration":4,"failureMessages":[],"fullName":"extractCompsFromCSS should work for null or empty","numPassingAsserts":0,"status":"passed","title":"should work for null or empty"},{"ancestorTitles":["extractCompsFromCSS"],"duration":0,"failureMessages":[],"fullName":"extractCompsFromCSS should ignore anything before the first SC","numPassingAsserts":0,"status":"passed","title":"should ignore anything before the first SC"},{"ancestorTitles":["extractCompsFromCSS"],"duration":0,"failureMessages":[],"fullName":"extractCompsFromCSS should return a single SC","numPassingAsserts":0,"status":"passed","title":"should return a single SC"},{"ancestorTitles":["extractCompsFromCSS"],"duration":0,"failureMessages":[],"fullName":"extractCompsFromCSS should return a single SC with multiple lines","numPassingAsserts":0,"status":"passed","title":"should return a single SC with multiple lines"},{"ancestorTitles":["extractCompsFromCSS"],"duration":0,"failureMessages":[],"fullName":"extractCompsFromCSS should return multiple SCs with single lines","numPassingAsserts":0,"status":"passed","title":"should return multiple SCs with single lines"},{"ancestorTitles":["extractCompsFromCSS"],"duration":0,"failureMessages":[],"fullName":"extractCompsFromCSS should return multiple SCs with multiple lines","numPassingAsserts":0,"status":"passed","title":"should return multiple SCs with multiple lines"},{"ancestorTitles":["extractCompsFromCSS"],"duration":0,"failureMessages":[],"fullName":"extractCompsFromCSS should include whitespace after a component","numPassingAsserts":0,"status":"passed","title":"should include whitespace after a component"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":20,"numPendingTests":0,"perfStats":{"end":1508127945519,"start":1508127945449},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/no-parser/test/flatten.test.js","testResults":[{"ancestorTitles":["preparsed flatten without executionContext"],"duration":3,"failureMessages":[],"fullName":"preparsed flatten without executionContext doesnt merge strings","numPassingAsserts":0,"status":"passed","title":"doesnt merge strings"},{"ancestorTitles":["preparsed flatten without executionContext"],"duration":1,"failureMessages":[],"fullName":"preparsed flatten without executionContext drops nulls","numPassingAsserts":0,"status":"passed","title":"drops nulls"},{"ancestorTitles":["preparsed flatten without executionContext"],"duration":0,"failureMessages":[],"fullName":"preparsed flatten without executionContext doesnt drop any numbers","numPassingAsserts":0,"status":"passed","title":"doesnt drop any numbers"},{"ancestorTitles":["preparsed flatten without executionContext"],"duration":1,"failureMessages":[],"fullName":"preparsed flatten without executionContext toStrings everything","numPassingAsserts":0,"status":"passed","title":"toStrings everything"},{"ancestorTitles":["preparsed flatten without executionContext"],"duration":1,"failureMessages":[],"fullName":"preparsed flatten without executionContext hypenates objects","numPassingAsserts":0,"status":"passed","title":"hypenates objects"},{"ancestorTitles":["preparsed flatten without executionContext"],"duration":0,"failureMessages":[],"fullName":"preparsed flatten without executionContext flattens nested rulesets","numPassingAsserts":0,"status":"passed","title":"flattens nested rulesets"},{"ancestorTitles":["preparsed flatten without executionContext"],"duration":1,"failureMessages":[],"fullName":"preparsed flatten without executionContext flattens double nested rulesets","numPassingAsserts":0,"status":"passed","title":"flattens double nested rulesets"},{"ancestorTitles":["preparsed flatten without executionContext"],"duration":1,"failureMessages":[],"fullName":"preparsed flatten without executionContext flattens subarrays","numPassingAsserts":0,"status":"passed","title":"flattens subarrays"},{"ancestorTitles":["preparsed flatten without executionContext"],"duration":3,"failureMessages":[],"fullName":"preparsed flatten without executionContext defers functions","numPassingAsserts":0,"status":"passed","title":"defers functions"},{"ancestorTitles":["preparsed flatten with executionContext"],"duration":0,"failureMessages":[],"fullName":"preparsed flatten with executionContext merges strings","numPassingAsserts":0,"status":"passed","title":"merges strings"},{"ancestorTitles":["preparsed flatten with executionContext"],"duration":1,"failureMessages":[],"fullName":"preparsed flatten with executionContext drops nulls","numPassingAsserts":0,"status":"passed","title":"drops nulls"},{"ancestorTitles":["preparsed flatten with executionContext"],"duration":0,"failureMessages":[],"fullName":"preparsed flatten with executionContext doesnt drop any numbers","numPassingAsserts":0,"status":"passed","title":"doesnt drop any numbers"},{"ancestorTitles":["preparsed flatten with executionContext"],"duration":1,"failureMessages":[],"fullName":"preparsed flatten with executionContext toStrings everything","numPassingAsserts":0,"status":"passed","title":"toStrings everything"},{"ancestorTitles":["preparsed flatten with executionContext"],"duration":1,"failureMessages":[],"fullName":"preparsed flatten with executionContext hypenates objects","numPassingAsserts":0,"status":"passed","title":"hypenates objects"},{"ancestorTitles":["preparsed flatten with executionContext"],"duration":1,"failureMessages":[],"fullName":"preparsed flatten with executionContext flattens nested rulesets","numPassingAsserts":0,"status":"passed","title":"flattens nested rulesets"},{"ancestorTitles":["preparsed flatten with executionContext"],"duration":0,"failureMessages":[],"fullName":"preparsed flatten with executionContext flattens double nested rulesets","numPassingAsserts":0,"status":"passed","title":"flattens double nested rulesets"},{"ancestorTitles":["preparsed flatten with executionContext"],"duration":0,"failureMessages":[],"fullName":"preparsed flatten with executionContext flattens subarrays","numPassingAsserts":0,"status":"passed","title":"flattens subarrays"},{"ancestorTitles":["preparsed flatten with executionContext"],"duration":1,"failureMessages":[],"fullName":"preparsed flatten with executionContext executes functions","numPassingAsserts":0,"status":"passed","title":"executes functions"},{"ancestorTitles":["preparsed flatten with executionContext"],"duration":0,"failureMessages":[],"fullName":"preparsed flatten with executionContext resolves rulesets after executing functions","numPassingAsserts":0,"status":"passed","title":"resolves rulesets after executing functions"},{"ancestorTitles":["preparsed flatten with executionContext"],"duration":1,"failureMessages":[],"fullName":"preparsed flatten with executionContext resolves double nested rulesets after executing functions","numPassingAsserts":0,"status":"passed","title":"resolves double nested rulesets after executing functions"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"perfStats":{"end":1508127945536,"start":1508127945370},"snapshot":{"added":0,"fileDeleted":false,"matched":20,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/test/ssr.test.js","testResults":[{"ancestorTitles":["ssr"],"duration":20,"failureMessages":[],"fullName":"ssr should extract the CSS in a simple case","numPassingAsserts":0,"status":"passed","title":"should extract the CSS in a simple case"},{"ancestorTitles":["ssr"],"duration":3,"failureMessages":[],"fullName":"ssr should extract both global and local CSS","numPassingAsserts":0,"status":"passed","title":"should extract both global and local CSS"},{"ancestorTitles":["ssr"],"duration":3,"failureMessages":[],"fullName":"ssr should add a nonce to the stylesheet if webpack nonce is detected in the global scope","numPassingAsserts":0,"status":"passed","title":"should add a nonce to the stylesheet if webpack nonce is detected in the global scope"},{"ancestorTitles":["ssr"],"duration":3,"failureMessages":[],"fullName":"ssr should render CSS in the order the components were defined, not rendered","numPassingAsserts":0,"status":"passed","title":"should render CSS in the order the components were defined, not rendered"},{"ancestorTitles":["ssr"],"duration":9,"failureMessages":[],"fullName":"ssr should share global styles but keep renders separate","numPassingAsserts":0,"status":"passed","title":"should share global styles but keep renders separate"},{"ancestorTitles":["ssr"],"duration":5,"failureMessages":[],"fullName":"ssr should allow global styles to be injected during rendering","numPassingAsserts":0,"status":"passed","title":"should allow global styles to be injected during rendering"},{"ancestorTitles":["ssr"],"duration":4,"failureMessages":[],"fullName":"ssr should dispatch global styles to each ServerStyleSheet","numPassingAsserts":0,"status":"passed","title":"should dispatch global styles to each ServerStyleSheet"},{"ancestorTitles":["ssr"],"duration":18,"failureMessages":[],"fullName":"ssr should return a generated React style element","numPassingAsserts":0,"status":"passed","title":"should return a generated React style element"},{"ancestorTitles":["ssr"],"duration":6,"failureMessages":[],"fullName":"ssr should return a generated React style element with nonce if webpack nonce is preset in the global scope","numPassingAsserts":0,"status":"passed","title":"should return a generated React style element with nonce if webpack nonce is preset in the global scope"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"perfStats":{"end":1508127945543,"start":1508127945493},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/utils/test/determineTheme.test.js","testResults":[{"ancestorTitles":["determineTheme"],"duration":2,"failureMessages":[],"fullName":"determineTheme should take precedence over ThemeProvider","numPassingAsserts":0,"status":"passed","title":"should take precedence over ThemeProvider"},{"ancestorTitles":["determineTheme"],"duration":1,"failureMessages":[],"fullName":"determineTheme should fallback to default theme","numPassingAsserts":0,"status":"passed","title":"should fallback to default theme"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":12,"numPendingTests":0,"perfStats":{"end":1508127945544,"start":1508127945472},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/utils/test/flatten.test.js","testResults":[{"ancestorTitles":["flatten"],"duration":2,"failureMessages":[],"fullName":"flatten doesnt merge strings","numPassingAsserts":0,"status":"passed","title":"doesnt merge strings"},{"ancestorTitles":["flatten"],"duration":1,"failureMessages":[],"fullName":"flatten drops nulls","numPassingAsserts":0,"status":"passed","title":"drops nulls"},{"ancestorTitles":["flatten"],"duration":0,"failureMessages":[],"fullName":"flatten doesnt drop any numbers","numPassingAsserts":0,"status":"passed","title":"doesnt drop any numbers"},{"ancestorTitles":["flatten"],"duration":0,"failureMessages":[],"fullName":"flatten toStrings everything","numPassingAsserts":0,"status":"passed","title":"toStrings everything"},{"ancestorTitles":["flatten"],"duration":1,"failureMessages":[],"fullName":"flatten hypenates objects","numPassingAsserts":0,"status":"passed","title":"hypenates objects"},{"ancestorTitles":["flatten"],"duration":2,"failureMessages":[],"fullName":"flatten handles nested objects","numPassingAsserts":0,"status":"passed","title":"handles nested objects"},{"ancestorTitles":["flatten"],"duration":0,"failureMessages":[],"fullName":"flatten toStrings class instances","numPassingAsserts":0,"status":"passed","title":"toStrings class instances"},{"ancestorTitles":["flatten"],"duration":0,"failureMessages":[],"fullName":"flatten flattens subarrays","numPassingAsserts":0,"status":"passed","title":"flattens subarrays"},{"ancestorTitles":["flatten"],"duration":1,"failureMessages":[],"fullName":"flatten defers functions","numPassingAsserts":0,"status":"passed","title":"defers functions"},{"ancestorTitles":["flatten"],"duration":0,"failureMessages":[],"fullName":"flatten executes functions","numPassingAsserts":0,"status":"passed","title":"executes functions"},{"ancestorTitles":["flatten"],"duration":0,"failureMessages":[],"fullName":"flatten passes values to function","numPassingAsserts":0,"status":"passed","title":"passes values to function"},{"ancestorTitles":["flatten"],"duration":1,"failureMessages":[],"fullName":"flatten recursively calls functions","numPassingAsserts":0,"status":"passed","title":"recursively calls functions"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"perfStats":{"end":1508127945555,"start":1508127945513},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/utils/test/generateAlphabeticName.test.js","testResults":[{"ancestorTitles":["generateAlphabeticName"],"duration":1,"failureMessages":[],"fullName":"generateAlphabeticName should create alphabetic names for number input data","numPassingAsserts":0,"status":"passed","title":"should create alphabetic names for number input data"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"perfStats":{"end":1508127945558,"start":1508127945316},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/test/overriding.test.js","testResults":[{"ancestorTitles":["extending"],"duration":6,"failureMessages":[],"fullName":"extending should let you use another component in a css rule","numPassingAsserts":0,"status":"passed","title":"should let you use another component in a css rule"}],"sourceMaps":{},"skipped":false},{"console":[],"failureMessage":null,"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"perfStats":{"end":1508127945575,"start":1508127945542},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0},"testFilePath":"/Users/cferris/src/styled-components/src/utils/test/interleave.test.js","testResults":[{"ancestorTitles":["interleave"],"duration":1,"failureMessages":[],"fullName":"interleave blindly interleave","numPassingAsserts":0,"status":"passed","title":"blindly interleave"},{"ancestorTitles":["interleave"],"duration":0,"failureMessages":[],"fullName":"interleave should be driven off the number of interpolations","numPassingAsserts":0,"status":"passed","title":"should be driven off the number of interpolations"}],"sourceMaps":{},"skipped":false}],"wasInterrupted":false}
{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":20,"numPassedTests":156,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTotalTestSuites":20,"numTotalTests":156,"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":25,"total":25,"unchecked":0,"unmatched":0,"updated":0},"startTime":1525942039890,"success":true,"testResults":[{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should inject props.theme into a styled component"},{"failureMessages":[],"status":"passed","title":"should inject props.theme into a styled component multiple levels deep"},{"failureMessages":[],"status":"passed","title":"should properly allow a component to fallback to its default props when a theme is not provided"},{"failureMessages":[],"status":"passed","title":"should use ThemeProvider theme instead of defaultProps theme"},{"failureMessages":[],"status":"passed","title":"should properly allow a component to override the theme with a prop even if it is equal to defaultProps theme"},{"failureMessages":[],"status":"passed","title":"should properly allow a component to override the theme with a prop"},{"failureMessages":[],"status":"passed","title":"should properly set the theme with an empty object when no theme is provided and no defaults are set"},{"failureMessages":[],"status":"passed","title":"should only inject props.theme into styled components within its child component tree"},{"failureMessages":[],"status":"passed","title":"should inject props.theme into all styled components within the child component tree"},{"failureMessages":[],"status":"passed","title":"should inject new CSS when the theme changes"},{"failureMessages":[],"status":"passed","title":"should properly render with the same theme from default props on re-render"},{"failureMessages":[],"status":"passed","title":"should properly update style if theme is changed"},{"failureMessages":[],"status":"passed","title":"should properly update style if props used in styles is changed"},{"failureMessages":[],"status":"passed","title":"should change the classnames when the theme changes"},{"failureMessages":[],"status":"passed","title":"should inject props.theme into a component that uses withTheme hoc"},{"failureMessages":[],"status":"passed","title":"should properly update theme prop on hoc component when theme is changed"},{"failureMessages":[],"status":"passed","title":"should use ThemeProvider theme instead of defaultProps theme after initial render"},{"failureMessages":[],"status":"passed","title":"should hoist static properties when using withTheme"},{"failureMessages":[],"status":"passed","title":"should only pass the theme prop"},{"failureMessages":[],"status":"passed","title":"should accept innerRef and pass it on as ref"},{"failureMessages":[],"status":"passed","title":"should accept innerRef and pass it on for stateless function components"},{"failureMessages":[],"status":"passed","title":"should accept innerRef and pass it on for styled components"},{"failureMessages":[],"status":"passed","title":"should not break without a ThemeProvier if it has a defaultTheme"}],"endTime":1525942040395,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/test/theme.test.js","startTime":1525942040176,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should preserve the styles"},{"failureMessages":[],"status":"passed","title":"should append a new component like normal"},{"failureMessages":[],"status":"passed","title":"should reuse a componentId"},{"failureMessages":[],"status":"passed","title":"should reuse a componentId and generated class"},{"failureMessages":[],"status":"passed","title":"should reuse a componentId and inject new classes"},{"failureMessages":[],"status":"passed","title":"should preserve the styles"},{"failureMessages":[],"status":"passed","title":"should not inject new styles for a component already rendered"},{"failureMessages":[],"status":"passed","title":"should inject new styles for a new computed style of a component"},{"failureMessages":[],"status":"passed","title":"should leave the existing styles there"},{"failureMessages":[],"status":"passed","title":"should generate new classes, even if they have the same name"},{"failureMessages":[],"status":"passed","title":"should leave the existing styles there"},{"failureMessages":[],"status":"passed","title":"should inject new global styles at the end"},{"failureMessages":[],"status":"passed","title":"should interleave global and local styles"},{"failureMessages":[],"status":"passed","title":"should not touch existing styles"},{"failureMessages":[],"status":"passed","title":"should replace stylesheets on-demand"},{"failureMessages":[],"status":"passed","title":"should not change styles if rendered in the same order they were created with"},{"failureMessages":[],"status":"passed","title":"should still not change styles if rendered in a different order"},{"failureMessages":[],"status":"passed","title":"should not touch existing styles"},{"failureMessages":[],"status":"passed","title":"should not regenerate keyframes"},{"failureMessages":[],"status":"passed","title":"should still inject new keyframes"},{"failureMessages":[],"status":"passed","title":"should pass the keyframes name along as well"}],"endTime":1525942040575,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/test/rehydration.test.js","startTime":1525942040476,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should warn once"},{"failureMessages":[],"status":"passed","title":"should warn if number of classes is 200"},{"failureMessages":[],"status":"passed","title":"should not warn if number of classes is below 200"}],"endTime":1525942040773,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/test/warnTooManyClasses.test.js","startTime":1525942040659,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should append a style"},{"failureMessages":[],"status":"passed","title":"should append multiple styles"},{"failureMessages":[],"status":"passed","title":"should handle inline style objects"},{"failureMessages":[],"status":"passed","title":"should handle inline style objects with media queries"},{"failureMessages":[],"status":"passed","title":"should handle inline style objects with pseudo selectors"},{"failureMessages":[],"status":"passed","title":"should handle inline style objects with pseudo selectors"},{"failureMessages":[],"status":"passed","title":"should handle inline style objects with nesting"},{"failureMessages":[],"status":"passed","title":"should handle inline style objects with contextual selectors"},{"failureMessages":[],"status":"passed","title":"should inject styles of multiple components"},{"failureMessages":[],"status":"passed","title":"should inject styles of multiple components based on creation, not rendering order"},{"failureMessages":[],"status":"passed","title":"should strip a JS-style (invalid) comment in the styles"},{"failureMessages":[],"status":"passed","title":"should respect removed rules"},{"failureMessages":[],"status":"passed","title":"should add a webpack nonce to the style tags if one is available in the global scope"}],"endTime":1525942040866,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/test/styles.test.js","startTime":1525942040830,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should use given stylesheet instance"},{"failureMessages":[],"status":"passed","title":"should render its child"},{"failureMessages":[],"status":"passed","title":"should append style to given target"},{"failureMessages":[],"status":"passed","title":"should append style to given target in iframe"},{"failureMessages":[],"status":"passed","title":"should apply styles to appropriate targets for nested StyleSheetManagers"},{"failureMessages":[],"status":"passed","title":"should inject styles into two parallel contexts"},{"failureMessages":[],"status":"passed","title":"should extract CSS outside the nested StyleSheetManager"}],"endTime":1525942040973,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/models/test/StyleSheetManager.test.js","startTime":1525942040922,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should generate empty classes with no styles"},{"failureMessages":[],"status":"passed","title":"should attach styles to both classes if only parent has styles"},{"failureMessages":[],"status":"passed","title":"should attach styles to child class if only child has styles"},{"failureMessages":[],"status":"passed","title":"should generate a class for the child with the rules of the parent"},{"failureMessages":[],"status":"passed","title":"should generate different classes for both parent and child"},{"failureMessages":[],"status":"passed","title":"should copy nested rules to the child"},{"failureMessages":[],"status":"passed","title":"should keep default props from parent"},{"failureMessages":[],"status":"passed","title":"should keep prop types from parent"},{"failureMessages":[],"status":"passed","title":"should keep custom static member from parent"},{"failureMessages":[],"status":"passed","title":"should keep static member in triple inheritance"},{"failureMessages":[],"status":"passed","title":"should keep styles in >= 3 inheritances"},{"failureMessages":[],"status":"passed","title":"should allow changing component"},{"failureMessages":[],"status":"passed","title":"should allow changing component and extending"},{"failureMessages":[],"status":"passed","title":"should allow changing component and adding attributes"}],"endTime":1525942041058,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/test/extending.test.js","startTime":1525942041024,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should not throw an error when called with a valid element"},{"failureMessages":[],"status":"passed","title":"should throw a meaningful error when called with an invalid element"},{"failureMessages":[],"status":"passed","title":"should not inject anything by default"},{"failureMessages":[],"status":"passed","title":"should inject component class when rendered even if no styles are passed"},{"failureMessages":[],"status":"passed","title":"should inject styles"},{"failureMessages":[],"status":"passed","title":"should inject only once for a styled component, no matter how often it's mounted"},{"failureMessages":[],"status":"passed","title":"Should have the correct styled(component) displayName"},{"failureMessages":[],"status":"passed","title":"should allow you to pass in style objects"},{"failureMessages":[],"status":"passed","title":"should pass the ref to the component"},{"failureMessages":[],"status":"passed","title":"should not leak the innerRef prop to the wrapped child"},{"failureMessages":[],"status":"passed","title":"should pass the full className to the wrapped child"},{"failureMessages":[],"status":"passed","title":"should pass the innerRef to the wrapped styled component"},{"failureMessages":[],"status":"passed","title":"should respect the order of StyledComponent creation for CSS ordering"},{"failureMessages":[],"status":"passed","title":"handle media at-rules inside style rules"}],"endTime":1525942041185,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/test/basic.test.js","startTime":1525942041146,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"work fine with an empty object"},{"failureMessages":[],"status":"passed","title":"pass a simple attr"},{"failureMessages":[],"status":"passed","title":"call an attr function"},{"failureMessages":[],"status":"passed","title":"pass props to the attr function"},{"failureMessages":[],"status":"passed","title":"should replace attrs with props"},{"failureMessages":[],"status":"passed","title":"should merge className"},{"failureMessages":[],"status":"passed","title":"should merge className even if its a function"},{"failureMessages":[],"status":"passed","title":"should work with data and aria attributes"},{"failureMessages":[],"status":"passed","title":"merge attrs"},{"failureMessages":[],"status":"passed","title":"merge attrs when inheriting SC"},{"failureMessages":[],"status":"passed","title":"pass attrs to style block"},{"failureMessages":[],"status":"passed","title":"should pass through children as a normal prop"},{"failureMessages":[],"status":"passed","title":"should pass through complex children as well"},{"failureMessages":[],"status":"passed","title":"should override children of course"}],"endTime":1525942041275,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/test/attrs.test.js","startTime":1525942041239,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should be auto-generated if none passed"},{"failureMessages":[],"status":"passed","title":"should be attached if supplied"},{"failureMessages":[],"status":"passed","title":"should be generated as \"sc\" + hash"},{"failureMessages":[],"status":"passed","title":"should be generated from displayName + hash"},{"failureMessages":[],"status":"passed","title":"should be attached if passed in"},{"failureMessages":[],"status":"passed","title":"should be combined with displayName if both passed in"},{"failureMessages":[],"status":"passed","title":"should work with `.extend`"},{"failureMessages":[],"status":"passed","title":"should work with `.withComponent`"},{"failureMessages":[],"status":"passed","title":"should merge the options strings"},{"failureMessages":[],"status":"passed","title":"should keep the last value passed in when merging"}],"endTime":1525942041356,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/test/expanded-api.test.js","startTime":1525942041327,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should extract the CSS in a simple case"},{"failureMessages":[],"status":"passed","title":"should extract both global and local CSS"},{"failureMessages":[],"status":"passed","title":"should not spill ServerStyleSheets into each other"},{"failureMessages":[],"status":"passed","title":"should add a nonce to the stylesheet if webpack nonce is detected in the global scope"},{"failureMessages":[],"status":"passed","title":"should render CSS in the order the components were defined, not rendered"},{"failureMessages":[],"status":"passed","title":"should share global styles but keep renders separate"},{"failureMessages":[],"status":"passed","title":"should allow global styles to be injected during rendering"},{"failureMessages":[],"status":"passed","title":"should dispatch global styles to each ServerStyleSheet"},{"failureMessages":[],"status":"passed","title":"should return a generated React style element"},{"failureMessages":[],"status":"passed","title":"should return a generated React style element with nonce if webpack nonce is preset in the global scope"},{"failureMessages":[],"status":"passed","title":"should interleave styles with rendered HTML when utilitizing streaming"}],"endTime":1525942041420,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/test/ssr.test.js","startTime":1525942041393,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should work with default SC_ATTR"},{"failureMessages":[],"status":"passed","title":"should work with custom SC_ATTR"}],"endTime":1525942041507,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/test/constants.test.js","startTime":1525942041479,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should have all valid HTML5 elements defined as properties"}],"endTime":1525942041586,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/constructors/test/styled.test.js","startTime":1525942041559,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should inject rules into the head"},{"failureMessages":[],"status":"passed","title":"should non-destructively inject styles when called repeatedly"},{"failureMessages":[],"status":"passed","title":"should non-destructively inject styles when called after a component"},{"failureMessages":[],"status":"passed","title":"should extract @import rules into separate style tags"}],"endTime":1525942041658,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/constructors/test/injectGlobal.test.js","startTime":1525942041635,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should add vendor prefixes in the right order"},{"failureMessages":[],"status":"passed","title":"should add vendor prefixes for display"},{"failureMessages":[],"status":"passed","title":"should generate styles for nested media queries"},{"failureMessages":[],"status":"passed","title":"should pass through custom properties"}],"endTime":1525942041734,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/test/css.test.js","startTime":1525942041709,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should mark styles without any functions as static"},{"failureMessages":[],"status":"passed","title":"should mark styles with a nested styled component as static"},{"failureMessages":[],"status":"passed","title":"should mark styles with a dynamic style as not static"},{"failureMessages":[],"status":"passed","title":"should mark components with numeric attriutes as static"},{"failureMessages":[],"status":"passed","title":"should mark components with dynamic attributes as not static"}],"endTime":1525942041807,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/test/staticCaching.test.js","startTime":1525942041786,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should return its name"},{"failureMessages":[],"status":"passed","title":"should insert the correct styles"}],"endTime":1525942041920,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/constructors/test/keyframes.test.js","startTime":1525942041899,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should throw a meaningful error when called with null"},{"failureMessages":[],"status":"passed","title":"should correctly assemble preprocessed CSS"},{"failureMessages":[],"status":"passed","title":"should correctly execute passed functions and assemble preprocessed CSS"}],"endTime":1525942041991,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/no-parser/test/basic.test.js","startTime":1525942041970,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should execute interpolations and fall back"},{"failureMessages":[],"status":"passed","title":"should execute interpolations and inject props"},{"failureMessages":[],"status":"passed","title":"should ignore non-0 falsy object interpolations"}],"endTime":1525942042069,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/test/props.test.js","startTime":1525942042042,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should let you use another component in a css rule"}],"endTime":1525942042138,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/test/overriding.test.js","startTime":1525942042119,"status":"passed","summary":""},{"assertionResults":[{"failureMessages":[],"status":"passed","title":"should correctly assemble preprocessed CSS"}],"endTime":1525942042210,"message":"","name":"/Users/mxstbr/projects/github/styled-components/styled-components/src/no-parser/test/keyframes.test.js","startTime":1525942042190,"status":"passed","summary":""}],"wasInterrupted":false}
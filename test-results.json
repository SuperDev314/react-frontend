{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":32,"numPassedTests":232,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTotalTestSuites":32,"numTotalTests":232,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":25,"total":25,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1527640847625,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["validAttr"],"failureMessages":[],"fullName":"validAttr should allow all the reactProps","location":null,"status":"passed","title":"should allow all the reactProps"},{"ancestorTitles":["validAttr"],"failureMessages":[],"fullName":"validAttr should allow all the html props","location":null,"status":"passed","title":"should allow all the html props"},{"ancestorTitles":["validAttr"],"failureMessages":[],"fullName":"validAttr should handle all the SVG props","location":null,"status":"passed","title":"should handle all the SVG props"},{"ancestorTitles":["validAttr"],"failureMessages":[],"fullName":"validAttr should handle aria and data attributes","location":null,"status":"passed","title":"should handle aria and data attributes"},{"ancestorTitles":["validAttr"],"failureMessages":[],"fullName":"validAttr should handle uppercase aria and data attributes","location":null,"status":"passed","title":"should handle uppercase aria and data attributes"},{"ancestorTitles":["validAttr"],"failureMessages":[],"fullName":"validAttr should allow all the event handlers","location":null,"status":"passed","title":"should allow all the event handlers"},{"ancestorTitles":["validAttr"],"failureMessages":[],"fullName":"validAttr should not allow custom props","location":null,"status":"passed","title":"should not allow custom props"},{"ancestorTitles":["validAttr"],"failureMessages":[],"fullName":"validAttr should handle x attributes","location":null,"status":"passed","title":"should handle x attributes"}],"endTime":1527640850986,"message":"","name":"/Users/bear/code/styled-components/src/utils/test/validAttr.test.js","startTime":1527640849785,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["extending"],"failureMessages":[],"fullName":"extending should generate empty classes with no styles","location":null,"status":"passed","title":"should generate empty classes with no styles"},{"ancestorTitles":["extending"],"failureMessages":[],"fullName":"extending should attach styles to both classes if only parent has styles","location":null,"status":"passed","title":"should attach styles to both classes if only parent has styles"},{"ancestorTitles":["extending"],"failureMessages":[],"fullName":"extending should attach styles to child class if only child has styles","location":null,"status":"passed","title":"should attach styles to child class if only child has styles"},{"ancestorTitles":["extending"],"failureMessages":[],"fullName":"extending should generate a class for the child with the rules of the parent","location":null,"status":"passed","title":"should generate a class for the child with the rules of the parent"},{"ancestorTitles":["extending"],"failureMessages":[],"fullName":"extending should generate different classes for both parent and child","location":null,"status":"passed","title":"should generate different classes for both parent and child"},{"ancestorTitles":["extending"],"failureMessages":[],"fullName":"extending should copy nested rules to the child","location":null,"status":"passed","title":"should copy nested rules to the child"},{"ancestorTitles":["extending"],"failureMessages":[],"fullName":"extending should keep default props from parent","location":null,"status":"passed","title":"should keep default props from parent"},{"ancestorTitles":["extending"],"failureMessages":[],"fullName":"extending should keep prop types from parent","location":null,"status":"passed","title":"should keep prop types from parent"},{"ancestorTitles":["extending"],"failureMessages":[],"fullName":"extending should keep custom static member from parent","location":null,"status":"passed","title":"should keep custom static member from parent"},{"ancestorTitles":["extending"],"failureMessages":[],"fullName":"extending should keep static member in triple inheritance","location":null,"status":"passed","title":"should keep static member in triple inheritance"},{"ancestorTitles":["extending"],"failureMessages":[],"fullName":"extending should keep styles in >= 3 inheritances","location":null,"status":"passed","title":"should keep styles in >= 3 inheritances"},{"ancestorTitles":["extending"],"failureMessages":[],"fullName":"extending should allow changing component","location":null,"status":"passed","title":"should allow changing component"},{"ancestorTitles":["extending"],"failureMessages":[],"fullName":"extending should allow changing component and extending","location":null,"status":"passed","title":"should allow changing component and extending"},{"ancestorTitles":["extending"],"failureMessages":[],"fullName":"extending should allow changing component and adding attributes","location":null,"status":"passed","title":"should allow changing component and adding attributes"}],"endTime":1527640852612,"message":"","name":"/Users/bear/code/styled-components/src/test/extending.test.js","startTime":1527640851063,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["basic"],"failureMessages":[],"fullName":"basic should not throw an error when called with a valid element","location":null,"status":"passed","title":"should not throw an error when called with a valid element"},{"ancestorTitles":["basic"],"failureMessages":[],"fullName":"basic should throw a meaningful error when called with an invalid element","location":null,"status":"passed","title":"should throw a meaningful error when called with an invalid element"},{"ancestorTitles":["basic"],"failureMessages":[],"fullName":"basic should not inject anything by default","location":null,"status":"passed","title":"should not inject anything by default"},{"ancestorTitles":["basic"],"failureMessages":[],"fullName":"basic should inject component class when rendered even if no styles are passed","location":null,"status":"passed","title":"should inject component class when rendered even if no styles are passed"},{"ancestorTitles":["basic"],"failureMessages":[],"fullName":"basic should inject styles","location":null,"status":"passed","title":"should inject styles"},{"ancestorTitles":["basic"],"failureMessages":[],"fullName":"basic should inject only once for a styled component, no matter how often it's mounted","location":null,"status":"passed","title":"should inject only once for a styled component, no matter how often it's mounted"},{"ancestorTitles":["basic"],"failureMessages":[],"fullName":"basic Should have the correct styled(component) displayName","location":null,"status":"passed","title":"Should have the correct styled(component) displayName"},{"ancestorTitles":["basic"],"failureMessages":[],"fullName":"basic should allow you to pass in style objects","location":null,"status":"passed","title":"should allow you to pass in style objects"},{"ancestorTitles":["basic","jsdom tests"],"failureMessages":[],"fullName":"basic jsdom tests should pass the ref to the component","location":null,"status":"passed","title":"should pass the ref to the component"},{"ancestorTitles":["basic","jsdom tests"],"failureMessages":[],"fullName":"basic jsdom tests should not leak the innerRef prop to the wrapped child","location":null,"status":"passed","title":"should not leak the innerRef prop to the wrapped child"},{"ancestorTitles":["basic","jsdom tests"],"failureMessages":[],"fullName":"basic jsdom tests should pass the full className to the wrapped child","location":null,"status":"passed","title":"should pass the full className to the wrapped child"},{"ancestorTitles":["basic","jsdom tests"],"failureMessages":[],"fullName":"basic jsdom tests should pass the innerRef to the wrapped styled component","location":null,"status":"passed","title":"should pass the innerRef to the wrapped styled component"},{"ancestorTitles":["basic","jsdom tests"],"failureMessages":[],"fullName":"basic jsdom tests should respect the order of StyledComponent creation for CSS ordering","location":null,"status":"passed","title":"should respect the order of StyledComponent creation for CSS ordering"},{"ancestorTitles":["basic","jsdom tests"],"failureMessages":[],"fullName":"basic jsdom tests handle media at-rules inside style rules","location":null,"status":"passed","title":"handle media at-rules inside style rules"},{"ancestorTitles":["basic","jsdom tests"],"failureMessages":[],"fullName":"basic jsdom tests should hoist non-react static properties","location":null,"status":"passed","title":"should hoist non-react static properties"},{"ancestorTitles":["basic","jsdom tests"],"failureMessages":[],"fullName":"basic jsdom tests should not hoist styled component statics","location":null,"status":"passed","title":"should not hoist styled component statics"}],"endTime":1527640852637,"message":"","name":"/Users/bear/code/styled-components/src/test/basic.test.js","startTime":1527640849358,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["StyleSheetManager"],"failureMessages":[],"fullName":"StyleSheetManager should use given stylesheet instance","location":null,"status":"passed","title":"should use given stylesheet instance"},{"ancestorTitles":["StyleSheetManager"],"failureMessages":[],"fullName":"StyleSheetManager should render its child","location":null,"status":"passed","title":"should render its child"},{"ancestorTitles":["StyleSheetManager"],"failureMessages":[],"fullName":"StyleSheetManager should append style to given target","location":null,"status":"passed","title":"should append style to given target"},{"ancestorTitles":["StyleSheetManager"],"failureMessages":[],"fullName":"StyleSheetManager should append style to given target in iframe","location":null,"status":"passed","title":"should append style to given target in iframe"},{"ancestorTitles":["StyleSheetManager"],"failureMessages":[],"fullName":"StyleSheetManager should apply styles to appropriate targets for nested StyleSheetManagers","location":null,"status":"passed","title":"should apply styles to appropriate targets for nested StyleSheetManagers"},{"ancestorTitles":["StyleSheetManager"],"failureMessages":[],"fullName":"StyleSheetManager should inject styles into two parallel contexts","location":null,"status":"passed","title":"should inject styles into two parallel contexts"},{"ancestorTitles":["StyleSheetManager","ssr"],"failureMessages":[],"fullName":"StyleSheetManager ssr should extract CSS outside the nested StyleSheetManager","location":null,"status":"passed","title":"should extract CSS outside the nested StyleSheetManager"}],"endTime":1527640852732,"message":"","name":"/Users/bear/code/styled-components/src/models/test/StyleSheetManager.test.js","startTime":1527640849335,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ssr"],"failureMessages":[],"fullName":"ssr should extract the CSS in a simple case","location":null,"status":"passed","title":"should extract the CSS in a simple case"},{"ancestorTitles":["ssr"],"failureMessages":[],"fullName":"ssr should extract both global and local CSS","location":null,"status":"passed","title":"should extract both global and local CSS"},{"ancestorTitles":["ssr"],"failureMessages":[],"fullName":"ssr should not spill ServerStyleSheets into each other","location":null,"status":"passed","title":"should not spill ServerStyleSheets into each other"},{"ancestorTitles":["ssr"],"failureMessages":[],"fullName":"ssr should add a nonce to the stylesheet if webpack nonce is detected in the global scope","location":null,"status":"passed","title":"should add a nonce to the stylesheet if webpack nonce is detected in the global scope"},{"ancestorTitles":["ssr"],"failureMessages":[],"fullName":"ssr should render CSS in the order the components were defined, not rendered","location":null,"status":"passed","title":"should render CSS in the order the components were defined, not rendered"},{"ancestorTitles":["ssr"],"failureMessages":[],"fullName":"ssr should share global styles but keep renders separate","location":null,"status":"passed","title":"should share global styles but keep renders separate"},{"ancestorTitles":["ssr"],"failureMessages":[],"fullName":"ssr should allow global styles to be injected during rendering","location":null,"status":"passed","title":"should allow global styles to be injected during rendering"},{"ancestorTitles":["ssr"],"failureMessages":[],"fullName":"ssr should dispatch global styles to each ServerStyleSheet","location":null,"status":"passed","title":"should dispatch global styles to each ServerStyleSheet"},{"ancestorTitles":["ssr"],"failureMessages":[],"fullName":"ssr should return a generated React style element","location":null,"status":"passed","title":"should return a generated React style element"},{"ancestorTitles":["ssr"],"failureMessages":[],"fullName":"ssr should return a generated React style element with nonce if webpack nonce is preset in the global scope","location":null,"status":"passed","title":"should return a generated React style element with nonce if webpack nonce is preset in the global scope"},{"ancestorTitles":["ssr"],"failureMessages":[],"fullName":"ssr should interleave styles with rendered HTML when utilitizing streaming","location":null,"status":"passed","title":"should interleave styles with rendered HTML when utilitizing streaming"}],"endTime":1527640852740,"message":"","name":"/Users/bear/code/styled-components/src/test/ssr.test.js","startTime":1527640849334,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with styles"],"failureMessages":[],"fullName":"with styles should append a style","location":null,"status":"passed","title":"should append a style"},{"ancestorTitles":["with styles"],"failureMessages":[],"fullName":"with styles should append multiple styles","location":null,"status":"passed","title":"should append multiple styles"},{"ancestorTitles":["with styles"],"failureMessages":[],"fullName":"with styles should handle inline style objects","location":null,"status":"passed","title":"should handle inline style objects"},{"ancestorTitles":["with styles"],"failureMessages":[],"fullName":"with styles should handle inline style objects with media queries","location":null,"status":"passed","title":"should handle inline style objects with media queries"},{"ancestorTitles":["with styles"],"failureMessages":[],"fullName":"with styles should handle inline style objects with pseudo selectors","location":null,"status":"passed","title":"should handle inline style objects with pseudo selectors"},{"ancestorTitles":["with styles"],"failureMessages":[],"fullName":"with styles should handle inline style objects with pseudo selectors","location":null,"status":"passed","title":"should handle inline style objects with pseudo selectors"},{"ancestorTitles":["with styles"],"failureMessages":[],"fullName":"with styles should handle inline style objects with nesting","location":null,"status":"passed","title":"should handle inline style objects with nesting"},{"ancestorTitles":["with styles"],"failureMessages":[],"fullName":"with styles should handle inline style objects with contextual selectors","location":null,"status":"passed","title":"should handle inline style objects with contextual selectors"},{"ancestorTitles":["with styles"],"failureMessages":[],"fullName":"with styles should inject styles of multiple components","location":null,"status":"passed","title":"should inject styles of multiple components"},{"ancestorTitles":["with styles"],"failureMessages":[],"fullName":"with styles should inject styles of multiple components based on creation, not rendering order","location":null,"status":"passed","title":"should inject styles of multiple components based on creation, not rendering order"},{"ancestorTitles":["with styles"],"failureMessages":[],"fullName":"with styles should strip a JS-style (invalid) comment in the styles","location":null,"status":"passed","title":"should strip a JS-style (invalid) comment in the styles"},{"ancestorTitles":["with styles"],"failureMessages":[],"fullName":"with styles should respect removed rules","location":null,"status":"passed","title":"should respect removed rules"},{"ancestorTitles":["with styles"],"failureMessages":[],"fullName":"with styles should add a webpack nonce to the style tags if one is available in the global scope","location":null,"status":"passed","title":"should add a webpack nonce to the style tags if one is available in the global scope"}],"endTime":1527640852786,"message":"","name":"/Users/bear/code/styled-components/src/test/styles.test.js","startTime":1527640849355,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["attrs"],"failureMessages":[],"fullName":"attrs work fine with an empty object","location":null,"status":"passed","title":"work fine with an empty object"},{"ancestorTitles":["attrs"],"failureMessages":[],"fullName":"attrs pass a simple attr","location":null,"status":"passed","title":"pass a simple attr"},{"ancestorTitles":["attrs"],"failureMessages":[],"fullName":"attrs call an attr function","location":null,"status":"passed","title":"call an attr function"},{"ancestorTitles":["attrs"],"failureMessages":[],"fullName":"attrs pass props to the attr function","location":null,"status":"passed","title":"pass props to the attr function"},{"ancestorTitles":["attrs"],"failureMessages":[],"fullName":"attrs should replace attrs with props","location":null,"status":"passed","title":"should replace attrs with props"},{"ancestorTitles":["attrs"],"failureMessages":[],"fullName":"attrs should merge className","location":null,"status":"passed","title":"should merge className"},{"ancestorTitles":["attrs"],"failureMessages":[],"fullName":"attrs should merge className even if its a function","location":null,"status":"passed","title":"should merge className even if its a function"},{"ancestorTitles":["attrs"],"failureMessages":[],"fullName":"attrs should work with data and aria attributes","location":null,"status":"passed","title":"should work with data and aria attributes"},{"ancestorTitles":["attrs"],"failureMessages":[],"fullName":"attrs merge attrs","location":null,"status":"passed","title":"merge attrs"},{"ancestorTitles":["attrs"],"failureMessages":[],"fullName":"attrs merge attrs when inheriting SC","location":null,"status":"passed","title":"merge attrs when inheriting SC"},{"ancestorTitles":["attrs"],"failureMessages":[],"fullName":"attrs pass attrs to style block","location":null,"status":"passed","title":"pass attrs to style block"},{"ancestorTitles":["attrs"],"failureMessages":[],"fullName":"attrs should pass through children as a normal prop","location":null,"status":"passed","title":"should pass through children as a normal prop"},{"ancestorTitles":["attrs"],"failureMessages":[],"fullName":"attrs should pass through complex children as well","location":null,"status":"passed","title":"should pass through complex children as well"},{"ancestorTitles":["attrs"],"failureMessages":[],"fullName":"attrs should override children of course","location":null,"status":"passed","title":"should override children of course"}],"endTime":1527640852893,"message":"","name":"/Users/bear/code/styled-components/src/test/attrs.test.js","startTime":1527640852685,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["rehydration","with existing styled components"],"failureMessages":[],"fullName":"rehydration with existing styled components should preserve the styles","location":null,"status":"passed","title":"should preserve the styles"},{"ancestorTitles":["rehydration","with existing styled components"],"failureMessages":[],"fullName":"rehydration with existing styled components should append a new component like normal","location":null,"status":"passed","title":"should append a new component like normal"},{"ancestorTitles":["rehydration","with existing styled components"],"failureMessages":[],"fullName":"rehydration with existing styled components should reuse a componentId","location":null,"status":"passed","title":"should reuse a componentId"},{"ancestorTitles":["rehydration","with existing styled components"],"failureMessages":[],"fullName":"rehydration with existing styled components should reuse a componentId and generated class","location":null,"status":"passed","title":"should reuse a componentId and generated class"},{"ancestorTitles":["rehydration","with existing styled components"],"failureMessages":[],"fullName":"rehydration with existing styled components should reuse a componentId and inject new classes","location":null,"status":"passed","title":"should reuse a componentId and inject new classes"},{"ancestorTitles":["rehydration","with styled components with props"],"failureMessages":[],"fullName":"rehydration with styled components with props should preserve the styles","location":null,"status":"passed","title":"should preserve the styles"},{"ancestorTitles":["rehydration","with styled components with props"],"failureMessages":[],"fullName":"rehydration with styled components with props should not inject new styles for a component already rendered","location":null,"status":"passed","title":"should not inject new styles for a component already rendered"},{"ancestorTitles":["rehydration","with styled components with props"],"failureMessages":[],"fullName":"rehydration with styled components with props should inject new styles for a new computed style of a component","location":null,"status":"passed","title":"should inject new styles for a new computed style of a component"},{"ancestorTitles":["rehydration","with inline styles that werent rendered by us"],"failureMessages":[],"fullName":"rehydration with inline styles that werent rendered by us should leave the existing styles there","location":null,"status":"passed","title":"should leave the existing styles there"},{"ancestorTitles":["rehydration","with inline styles that werent rendered by us"],"failureMessages":[],"fullName":"rehydration with inline styles that werent rendered by us should generate new classes, even if they have the same name","location":null,"status":"passed","title":"should generate new classes, even if they have the same name"},{"ancestorTitles":["rehydration","with global styles"],"failureMessages":[],"fullName":"rehydration with global styles should leave the existing styles there","location":null,"status":"passed","title":"should leave the existing styles there"},{"ancestorTitles":["rehydration","with global styles"],"failureMessages":[],"fullName":"rehydration with global styles should inject new global styles at the end","location":null,"status":"passed","title":"should inject new global styles at the end"},{"ancestorTitles":["rehydration","with global styles"],"failureMessages":[],"fullName":"rehydration with global styles should interleave global and local styles","location":null,"status":"passed","title":"should interleave global and local styles"},{"ancestorTitles":["rehydration","with all styles already rendered"],"failureMessages":[],"fullName":"rehydration with all styles already rendered should not touch existing styles","location":null,"status":"passed","title":"should not touch existing styles"},{"ancestorTitles":["rehydration","with all styles already rendered"],"failureMessages":[],"fullName":"rehydration with all styles already rendered should replace stylesheets on-demand","location":null,"status":"passed","title":"should replace stylesheets on-demand"},{"ancestorTitles":["rehydration","with all styles already rendered"],"failureMessages":[],"fullName":"rehydration with all styles already rendered should not change styles if rendered in the same order they were created with","location":null,"status":"passed","title":"should not change styles if rendered in the same order they were created with"},{"ancestorTitles":["rehydration","with all styles already rendered"],"failureMessages":[],"fullName":"rehydration with all styles already rendered should still not change styles if rendered in a different order","location":null,"status":"passed","title":"should still not change styles if rendered in a different order"},{"ancestorTitles":["rehydration","with keyframes"],"failureMessages":[],"fullName":"rehydration with keyframes should not touch existing styles","location":null,"status":"passed","title":"should not touch existing styles"},{"ancestorTitles":["rehydration","with keyframes"],"failureMessages":[],"fullName":"rehydration with keyframes should not regenerate keyframes","location":null,"status":"passed","title":"should not regenerate keyframes"},{"ancestorTitles":["rehydration","with keyframes"],"failureMessages":[],"fullName":"rehydration with keyframes should still inject new keyframes","location":null,"status":"passed","title":"should still inject new keyframes"},{"ancestorTitles":["rehydration","with keyframes"],"failureMessages":[],"fullName":"rehydration with keyframes should pass the keyframes name along as well","location":null,"status":"passed","title":"should pass the keyframes name along as well"}],"endTime":1527640852890,"message":"","name":"/Users/bear/code/styled-components/src/test/rehydration.test.js","startTime":1527640849811,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ThemeProvider"],"failureMessages":[],"fullName":"ThemeProvider should not throw an error when no children are passed","location":null,"status":"passed","title":"should not throw an error when no children are passed"},{"ancestorTitles":["ThemeProvider"],"failureMessages":[],"fullName":"ThemeProvider should accept a theme prop that's a plain object","location":null,"status":"passed","title":"should accept a theme prop that's a plain object"},{"ancestorTitles":["ThemeProvider"],"failureMessages":[],"fullName":"ThemeProvider should render its child","location":null,"status":"passed","title":"should render its child"},{"ancestorTitles":["ThemeProvider"],"failureMessages":[],"fullName":"ThemeProvider should merge its theme with an outer theme","location":null,"status":"passed","title":"should merge its theme with an outer theme"},{"ancestorTitles":["ThemeProvider"],"failureMessages":[],"fullName":"ThemeProvider should merge its theme with multiple outer themes","location":null,"status":"passed","title":"should merge its theme with multiple outer themes"},{"ancestorTitles":["ThemeProvider"],"failureMessages":[],"fullName":"ThemeProvider should be able to render two independent themes","location":null,"status":"passed","title":"should be able to render two independent themes"},{"ancestorTitles":["ThemeProvider"],"failureMessages":[],"fullName":"ThemeProvider ThemeProvider propagates theme updates through nested ThemeProviders","location":null,"status":"passed","title":"ThemeProvider propagates theme updates through nested ThemeProviders"}],"endTime":1527640852978,"message":"","name":"/Users/bear/code/styled-components/src/models/test/ThemeProvider.test.js","startTime":1527640852732,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should inject props.theme into a styled component","location":null,"status":"passed","title":"should inject props.theme into a styled component"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should inject props.theme into a styled component multiple levels deep","location":null,"status":"passed","title":"should inject props.theme into a styled component multiple levels deep"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should properly allow a component to fallback to its default props when a theme is not provided","location":null,"status":"passed","title":"should properly allow a component to fallback to its default props when a theme is not provided"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should use ThemeProvider theme instead of defaultProps theme","location":null,"status":"passed","title":"should use ThemeProvider theme instead of defaultProps theme"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should properly allow a component to override the theme with a prop even if it is equal to defaultProps theme","location":null,"status":"passed","title":"should properly allow a component to override the theme with a prop even if it is equal to defaultProps theme"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should properly allow a component to override the theme with a prop","location":null,"status":"passed","title":"should properly allow a component to override the theme with a prop"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should properly set the theme with an empty object when no theme is provided and no defaults are set","location":null,"status":"passed","title":"should properly set the theme with an empty object when no theme is provided and no defaults are set"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should only inject props.theme into styled components within its child component tree","location":null,"status":"passed","title":"should only inject props.theme into styled components within its child component tree"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should inject props.theme into all styled components within the child component tree","location":null,"status":"passed","title":"should inject props.theme into all styled components within the child component tree"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should inject new CSS when the theme changes","location":null,"status":"passed","title":"should inject new CSS when the theme changes"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should properly render with the same theme from default props on re-render","location":null,"status":"passed","title":"should properly render with the same theme from default props on re-render"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should properly update style if theme is changed","location":null,"status":"passed","title":"should properly update style if theme is changed"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should properly update style if props used in styles is changed","location":null,"status":"passed","title":"should properly update style if props used in styles is changed"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should change the classnames when the theme changes","location":null,"status":"passed","title":"should change the classnames when the theme changes"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should inject props.theme into a component that uses withTheme hoc","location":null,"status":"passed","title":"should inject props.theme into a component that uses withTheme hoc"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should properly update theme prop on hoc component when theme is changed","location":null,"status":"passed","title":"should properly update theme prop on hoc component when theme is changed"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should use ThemeProvider theme instead of defaultProps theme after initial render","location":null,"status":"passed","title":"should use ThemeProvider theme instead of defaultProps theme after initial render"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should hoist static properties when using withTheme","location":null,"status":"passed","title":"should hoist static properties when using withTheme"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should only pass the theme prop","location":null,"status":"passed","title":"should only pass the theme prop"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should accept innerRef and pass it on as ref","location":null,"status":"passed","title":"should accept innerRef and pass it on as ref"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should accept innerRef and pass it on for stateless function components","location":null,"status":"passed","title":"should accept innerRef and pass it on for stateless function components"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should accept innerRef and pass it on for styled components","location":null,"status":"passed","title":"should accept innerRef and pass it on for styled components"},{"ancestorTitles":["theming"],"failureMessages":[],"fullName":"theming should not break without a ThemeProvier if it has a defaultTheme","location":null,"status":"passed","title":"should not break without a ThemeProvier if it has a defaultTheme"}],"endTime":1527640852981,"message":"","name":"/Users/bear/code/styled-components/src/test/theme.test.js","startTime":1527640849346,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["flatten"],"failureMessages":[],"fullName":"flatten doesnt merge strings","location":null,"status":"passed","title":"doesnt merge strings"},{"ancestorTitles":["flatten"],"failureMessages":[],"fullName":"flatten drops nulls","location":null,"status":"passed","title":"drops nulls"},{"ancestorTitles":["flatten"],"failureMessages":[],"fullName":"flatten doesnt drop any numbers","location":null,"status":"passed","title":"doesnt drop any numbers"},{"ancestorTitles":["flatten"],"failureMessages":[],"fullName":"flatten toStrings everything","location":null,"status":"passed","title":"toStrings everything"},{"ancestorTitles":["flatten"],"failureMessages":[],"fullName":"flatten hypenates objects","location":null,"status":"passed","title":"hypenates objects"},{"ancestorTitles":["flatten"],"failureMessages":[],"fullName":"flatten handles nested objects","location":null,"status":"passed","title":"handles nested objects"},{"ancestorTitles":["flatten"],"failureMessages":[],"fullName":"flatten toStrings class instances","location":null,"status":"passed","title":"toStrings class instances"},{"ancestorTitles":["flatten"],"failureMessages":[],"fullName":"flatten flattens subarrays","location":null,"status":"passed","title":"flattens subarrays"},{"ancestorTitles":["flatten"],"failureMessages":[],"fullName":"flatten defers functions","location":null,"status":"passed","title":"defers functions"},{"ancestorTitles":["flatten"],"failureMessages":[],"fullName":"flatten executes functions","location":null,"status":"passed","title":"executes functions"},{"ancestorTitles":["flatten"],"failureMessages":[],"fullName":"flatten passes values to function","location":null,"status":"passed","title":"passes values to function"},{"ancestorTitles":["flatten"],"failureMessages":[],"fullName":"flatten recursively calls functions","location":null,"status":"passed","title":"recursively calls functions"}],"endTime":1527640853065,"message":"","name":"/Users/bear/code/styled-components/src/utils/test/flatten.test.js","startTime":1527640852919,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["expanded api","displayName"],"failureMessages":[],"fullName":"expanded api displayName should be auto-generated if none passed","location":null,"status":"passed","title":"should be auto-generated if none passed"},{"ancestorTitles":["expanded api","displayName"],"failureMessages":[],"fullName":"expanded api displayName should be attached if supplied","location":null,"status":"passed","title":"should be attached if supplied"},{"ancestorTitles":["expanded api","componentId"],"failureMessages":[],"fullName":"expanded api componentId should be generated as \"sc\" + hash","location":null,"status":"passed","title":"should be generated as \"sc\" + hash"},{"ancestorTitles":["expanded api","componentId"],"failureMessages":[],"fullName":"expanded api componentId should be generated from displayName + hash","location":null,"status":"passed","title":"should be generated from displayName + hash"},{"ancestorTitles":["expanded api","componentId"],"failureMessages":[],"fullName":"expanded api componentId should be attached if passed in","location":null,"status":"passed","title":"should be attached if passed in"},{"ancestorTitles":["expanded api","componentId"],"failureMessages":[],"fullName":"expanded api componentId should be combined with displayName if both passed in","location":null,"status":"passed","title":"should be combined with displayName if both passed in"},{"ancestorTitles":["expanded api","componentId"],"failureMessages":[],"fullName":"expanded api componentId should work with `.extend`","location":null,"status":"passed","title":"should work with `.extend`"},{"ancestorTitles":["expanded api","componentId"],"failureMessages":[],"fullName":"expanded api componentId should work with `.withComponent`","location":null,"status":"passed","title":"should work with `.withComponent`"},{"ancestorTitles":["expanded api","chaining"],"failureMessages":[],"fullName":"expanded api chaining should merge the options strings","location":null,"status":"passed","title":"should merge the options strings"},{"ancestorTitles":["expanded api","chaining"],"failureMessages":[],"fullName":"expanded api chaining should keep the last value passed in when merging","location":null,"status":"passed","title":"should keep the last value passed in when merging"}],"endTime":1527640853073,"message":"","name":"/Users/bear/code/styled-components/src/test/expanded-api.test.js","startTime":1527640852834,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["extractCompsFromCSS"],"failureMessages":[],"fullName":"extractCompsFromCSS should work for null or empty","location":null,"status":"passed","title":"should work for null or empty"},{"ancestorTitles":["extractCompsFromCSS"],"failureMessages":[],"fullName":"extractCompsFromCSS should ignore anything before the first SC","location":null,"status":"passed","title":"should ignore anything before the first SC"},{"ancestorTitles":["extractCompsFromCSS"],"failureMessages":[],"fullName":"extractCompsFromCSS should return a single SC","location":null,"status":"passed","title":"should return a single SC"},{"ancestorTitles":["extractCompsFromCSS"],"failureMessages":[],"fullName":"extractCompsFromCSS should return a single SC with multiple lines","location":null,"status":"passed","title":"should return a single SC with multiple lines"},{"ancestorTitles":["extractCompsFromCSS"],"failureMessages":[],"fullName":"extractCompsFromCSS should return multiple SCs with single lines","location":null,"status":"passed","title":"should return multiple SCs with single lines"},{"ancestorTitles":["extractCompsFromCSS"],"failureMessages":[],"fullName":"extractCompsFromCSS should return multiple SCs with multiple lines","location":null,"status":"passed","title":"should return multiple SCs with multiple lines"},{"ancestorTitles":["extractCompsFromCSS"],"failureMessages":[],"fullName":"extractCompsFromCSS should include whitespace after a component","location":null,"status":"passed","title":"should include whitespace after a component"}],"endTime":1527640853150,"message":"","name":"/Users/bear/code/styled-components/src/utils/test/extractCompsFromCSS.test.js","startTime":1527640853035,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["injectGlobal"],"failureMessages":[],"fullName":"injectGlobal should inject rules into the head","location":null,"status":"passed","title":"should inject rules into the head"},{"ancestorTitles":["injectGlobal"],"failureMessages":[],"fullName":"injectGlobal should non-destructively inject styles when called repeatedly","location":null,"status":"passed","title":"should non-destructively inject styles when called repeatedly"},{"ancestorTitles":["injectGlobal"],"failureMessages":[],"fullName":"injectGlobal should non-destructively inject styles when called after a component","location":null,"status":"passed","title":"should non-destructively inject styles when called after a component"},{"ancestorTitles":["injectGlobal"],"failureMessages":[],"fullName":"injectGlobal should extract @import rules into separate style tags","location":null,"status":"passed","title":"should extract @import rules into separate style tags"}],"endTime":1527640853166,"message":"","name":"/Users/bear/code/styled-components/src/constructors/test/injectGlobal.test.js","startTime":1527640853037,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["styleNames","addNameForId"],"failureMessages":[],"fullName":"styleNames addNameForId adds an id and a name to a given dictionary","location":null,"status":"passed","title":"adds an id and a name to a given dictionary"},{"ancestorTitles":["styleNames","resetIdNames"],"failureMessages":[],"fullName":"styleNames resetIdNames removes all names for an ID","location":null,"status":"passed","title":"removes all names for an ID"},{"ancestorTitles":["styleNames","hasNameForId"],"failureMessages":[],"fullName":"styleNames hasNameForId checks the existance of a name for an id","location":null,"status":"passed","title":"checks the existance of a name for an id"},{"ancestorTitles":["styleNames","stringifyNames"],"failureMessages":[],"fullName":"styleNames stringifyNames lists out all known names as a continuous string","location":null,"status":"passed","title":"lists out all known names as a continuous string"},{"ancestorTitles":["styleNames","cloneNames"],"failureMessages":[],"fullName":"styleNames cloneNames creates a deep clone of the names dictionary","location":null,"status":"passed","title":"creates a deep clone of the names dictionary"}],"endTime":1527640853170,"message":"","name":"/Users/bear/code/styled-components/src/utils/test/styleNames.test.js","startTime":1527640853075,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["static style caching"],"failureMessages":[],"fullName":"static style caching should mark styles without any functions as static","location":null,"status":"passed","title":"should mark styles without any functions as static"},{"ancestorTitles":["static style caching"],"failureMessages":[],"fullName":"static style caching should mark styles with a nested styled component as static","location":null,"status":"passed","title":"should mark styles with a nested styled component as static"},{"ancestorTitles":["static style caching"],"failureMessages":[],"fullName":"static style caching should mark styles with a dynamic style as not static","location":null,"status":"passed","title":"should mark styles with a dynamic style as not static"},{"ancestorTitles":["static style caching"],"failureMessages":[],"fullName":"static style caching should mark components with numeric attriutes as static","location":null,"status":"passed","title":"should mark components with numeric attriutes as static"},{"ancestorTitles":["static style caching"],"failureMessages":[],"fullName":"static style caching should mark components with dynamic attributes as not static","location":null,"status":"passed","title":"should mark components with dynamic attributes as not static"}],"endTime":1527640853241,"message":"","name":"/Users/bear/code/styled-components/src/test/staticCaching.test.js","startTime":1527640853083,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["css features"],"failureMessages":[],"fullName":"css features should add vendor prefixes in the right order","location":null,"status":"passed","title":"should add vendor prefixes in the right order"},{"ancestorTitles":["css features"],"failureMessages":[],"fullName":"css features should add vendor prefixes for display","location":null,"status":"passed","title":"should add vendor prefixes for display"},{"ancestorTitles":["css features"],"failureMessages":[],"fullName":"css features should generate styles for nested media queries","location":null,"status":"passed","title":"should generate styles for nested media queries"},{"ancestorTitles":["css features"],"failureMessages":[],"fullName":"css features should pass through custom properties","location":null,"status":"passed","title":"should pass through custom properties"}],"endTime":1527640853284,"message":"","name":"/Users/bear/code/styled-components/src/test/css.test.js","startTime":1527640853164,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["keyframes"],"failureMessages":[],"fullName":"keyframes should return its name","location":null,"status":"passed","title":"should return its name"},{"ancestorTitles":["keyframes"],"failureMessages":[],"fullName":"keyframes should insert the correct styles","location":null,"status":"passed","title":"should insert the correct styles"}],"endTime":1527640853396,"message":"","name":"/Users/bear/code/styled-components/src/constructors/test/keyframes.test.js","startTime":1527640853286,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["props"],"failureMessages":[],"fullName":"props should execute interpolations and fall back","location":null,"status":"passed","title":"should execute interpolations and fall back"},{"ancestorTitles":["props"],"failureMessages":[],"fullName":"props should execute interpolations and inject props","location":null,"status":"passed","title":"should execute interpolations and inject props"},{"ancestorTitles":["props"],"failureMessages":[],"fullName":"props should ignore non-0 falsy object interpolations","location":null,"status":"passed","title":"should ignore non-0 falsy object interpolations"}],"endTime":1527640853443,"message":"","name":"/Users/bear/code/styled-components/src/test/props.test.js","startTime":1527640853334,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["keyframes"],"failureMessages":[],"fullName":"keyframes should correctly assemble preprocessed CSS","location":null,"status":"passed","title":"should correctly assemble preprocessed CSS"}],"endTime":1527640853468,"message":"","name":"/Users/bear/code/styled-components/src/no-parser/test/keyframes.test.js","startTime":1527640853329,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["basic"],"failureMessages":[],"fullName":"basic should throw a meaningful error when called with null","location":null,"status":"passed","title":"should throw a meaningful error when called with null"},{"ancestorTitles":["basic"],"failureMessages":[],"fullName":"basic should correctly assemble preprocessed CSS","location":null,"status":"passed","title":"should correctly assemble preprocessed CSS"},{"ancestorTitles":["basic"],"failureMessages":[],"fullName":"basic should correctly execute passed functions and assemble preprocessed CSS","location":null,"status":"passed","title":"should correctly execute passed functions and assemble preprocessed CSS"}],"endTime":1527640853483,"message":"","name":"/Users/bear/code/styled-components/src/no-parser/test/basic.test.js","startTime":1527640853311,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["constants"],"failureMessages":[],"fullName":"constants should work with default SC_ATTR","location":null,"status":"passed","title":"should work with default SC_ATTR"},{"ancestorTitles":["constants"],"failureMessages":[],"fullName":"constants should work with custom SC_ATTR","location":null,"status":"passed","title":"should work with custom SC_ATTR"}],"endTime":1527640853553,"message":"","name":"/Users/bear/code/styled-components/src/test/constants.test.js","startTime":1527640853415,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["extending"],"failureMessages":[],"fullName":"extending should let you use another component in a css rule","location":null,"status":"passed","title":"should let you use another component in a css rule"}],"endTime":1527640853676,"message":"","name":"/Users/bear/code/styled-components/src/test/overriding.test.js","startTime":1527640853576,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["getComponentName"],"failureMessages":[],"fullName":"getComponentName defaults to reusing the component displayName","location":null,"status":"passed","title":"defaults to reusing the component displayName"},{"ancestorTitles":["getComponentName"],"failureMessages":[],"fullName":"getComponentName falls back to the class name","location":null,"status":"passed","title":"falls back to the class name"},{"ancestorTitles":["getComponentName"],"failureMessages":[],"fullName":"getComponentName ultimately falls back to \"Component\"","location":null,"status":"passed","title":"ultimately falls back to \"Component\""}],"endTime":1527640853720,"message":"","name":"/Users/bear/code/styled-components/src/utils/test/getComponentName.test.js","startTime":1527640853621,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"handles a string type","location":null,"status":"passed","title":"handles a string type"},{"ancestorTitles":[],"failureMessages":[],"fullName":"handles a React class type","location":null,"status":"passed","title":"handles a React class type"},{"ancestorTitles":[],"failureMessages":[],"fullName":"handles a React class type with displayName","location":null,"status":"passed","title":"handles a React class type with displayName"}],"endTime":1527640853721,"message":"","name":"/Users/bear/code/styled-components/src/utils/test/generateDisplayName.test.js","startTime":1527640853609,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["interleave"],"failureMessages":[],"fullName":"interleave blindly interleave","location":null,"status":"passed","title":"blindly interleave"},{"ancestorTitles":["interleave"],"failureMessages":[],"fullName":"interleave should be driven off the number of interpolations","location":null,"status":"passed","title":"should be driven off the number of interpolations"}],"endTime":1527640853733,"message":"","name":"/Users/bear/code/styled-components/src/utils/test/interleave.test.js","startTime":1527640853627,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["determineTheme"],"failureMessages":[],"fullName":"determineTheme should take precedence over ThemeProvider","location":null,"status":"passed","title":"should take precedence over ThemeProvider"},{"ancestorTitles":["determineTheme"],"failureMessages":[],"fullName":"determineTheme should fallback to default theme","location":null,"status":"passed","title":"should fallback to default theme"}],"endTime":1527640853754,"message":"","name":"/Users/bear/code/styled-components/src/utils/test/determineTheme.test.js","startTime":1527640853680,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["warn too many classes"],"failureMessages":[],"fullName":"warn too many classes should warn once","location":null,"status":"passed","title":"should warn once"},{"ancestorTitles":["warn too many classes"],"failureMessages":[],"fullName":"warn too many classes should warn if number of classes is 200","location":null,"status":"passed","title":"should warn if number of classes is 200"},{"ancestorTitles":["warn too many classes"],"failureMessages":[],"fullName":"warn too many classes should not warn if number of classes is below 200","location":null,"status":"passed","title":"should not warn if number of classes is below 200"}],"endTime":1527640853756,"message":"","name":"/Users/bear/code/styled-components/src/test/warnTooManyClasses.test.js","startTime":1527640853170,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["escape"],"failureMessages":[],"fullName":"escape replaces characters that could be part of CSS selectors","location":null,"status":"passed","title":"replaces characters that could be part of CSS selectors"},{"ancestorTitles":["escape"],"failureMessages":[],"fullName":"escape replaces double hyphens with a single hyphen","location":null,"status":"passed","title":"replaces double hyphens with a single hyphen"},{"ancestorTitles":["escape"],"failureMessages":[],"fullName":"escape removes extraneous hyphens at the ends of the string","location":null,"status":"passed","title":"removes extraneous hyphens at the ends of the string"}],"endTime":1527640853864,"message":"","name":"/Users/bear/code/styled-components/src/utils/test/escape.test.js","startTime":1527640853805,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["generateAlphabeticName"],"failureMessages":[],"fullName":"generateAlphabeticName should create alphabetic names for number input data","location":null,"status":"passed","title":"should create alphabetic names for number input data"},{"ancestorTitles":["generateAlphabeticName"],"failureMessages":[],"fullName":"generateAlphabeticName should not fail for numbers above int32 limit","location":null,"status":"passed","title":"should not fail for numbers above int32 limit"}],"endTime":1527640853898,"message":"","name":"/Users/bear/code/styled-components/src/utils/test/generateAlphabeticName.test.js","startTime":1527640853747,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["preparsed flatten without executionContext"],"failureMessages":[],"fullName":"preparsed flatten without executionContext doesnt merge strings","location":null,"status":"passed","title":"doesnt merge strings"},{"ancestorTitles":["preparsed flatten without executionContext"],"failureMessages":[],"fullName":"preparsed flatten without executionContext drops nulls","location":null,"status":"passed","title":"drops nulls"},{"ancestorTitles":["preparsed flatten without executionContext"],"failureMessages":[],"fullName":"preparsed flatten without executionContext doesnt drop any numbers","location":null,"status":"passed","title":"doesnt drop any numbers"},{"ancestorTitles":["preparsed flatten without executionContext"],"failureMessages":[],"fullName":"preparsed flatten without executionContext toStrings everything","location":null,"status":"passed","title":"toStrings everything"},{"ancestorTitles":["preparsed flatten without executionContext"],"failureMessages":[],"fullName":"preparsed flatten without executionContext hypenates objects","location":null,"status":"passed","title":"hypenates objects"},{"ancestorTitles":["preparsed flatten without executionContext"],"failureMessages":[],"fullName":"preparsed flatten without executionContext flattens nested rulesets","location":null,"status":"passed","title":"flattens nested rulesets"},{"ancestorTitles":["preparsed flatten without executionContext"],"failureMessages":[],"fullName":"preparsed flatten without executionContext flattens double nested rulesets","location":null,"status":"passed","title":"flattens double nested rulesets"},{"ancestorTitles":["preparsed flatten without executionContext"],"failureMessages":[],"fullName":"preparsed flatten without executionContext flattens subarrays","location":null,"status":"passed","title":"flattens subarrays"},{"ancestorTitles":["preparsed flatten without executionContext"],"failureMessages":[],"fullName":"preparsed flatten without executionContext defers functions","location":null,"status":"passed","title":"defers functions"},{"ancestorTitles":["preparsed flatten with executionContext"],"failureMessages":[],"fullName":"preparsed flatten with executionContext merges strings","location":null,"status":"passed","title":"merges strings"},{"ancestorTitles":["preparsed flatten with executionContext"],"failureMessages":[],"fullName":"preparsed flatten with executionContext drops nulls","location":null,"status":"passed","title":"drops nulls"},{"ancestorTitles":["preparsed flatten with executionContext"],"failureMessages":[],"fullName":"preparsed flatten with executionContext doesnt drop any numbers","location":null,"status":"passed","title":"doesnt drop any numbers"},{"ancestorTitles":["preparsed flatten with executionContext"],"failureMessages":[],"fullName":"preparsed flatten with executionContext toStrings everything","location":null,"status":"passed","title":"toStrings everything"},{"ancestorTitles":["preparsed flatten with executionContext"],"failureMessages":[],"fullName":"preparsed flatten with executionContext hypenates objects","location":null,"status":"passed","title":"hypenates objects"},{"ancestorTitles":["preparsed flatten with executionContext"],"failureMessages":[],"fullName":"preparsed flatten with executionContext flattens nested rulesets","location":null,"status":"passed","title":"flattens nested rulesets"},{"ancestorTitles":["preparsed flatten with executionContext"],"failureMessages":[],"fullName":"preparsed flatten with executionContext flattens double nested rulesets","location":null,"status":"passed","title":"flattens double nested rulesets"},{"ancestorTitles":["preparsed flatten with executionContext"],"failureMessages":[],"fullName":"preparsed flatten with executionContext flattens subarrays","location":null,"status":"passed","title":"flattens subarrays"},{"ancestorTitles":["preparsed flatten with executionContext"],"failureMessages":[],"fullName":"preparsed flatten with executionContext executes functions","location":null,"status":"passed","title":"executes functions"},{"ancestorTitles":["preparsed flatten with executionContext"],"failureMessages":[],"fullName":"preparsed flatten with executionContext resolves rulesets after executing functions","location":null,"status":"passed","title":"resolves rulesets after executing functions"},{"ancestorTitles":["preparsed flatten with executionContext"],"failureMessages":[],"fullName":"preparsed flatten with executionContext resolves double nested rulesets after executing functions","location":null,"status":"passed","title":"resolves double nested rulesets after executing functions"}],"endTime":1527640853934,"message":"","name":"/Users/bear/code/styled-components/src/no-parser/test/flatten.test.js","startTime":1527640853746,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["styled"],"failureMessages":[],"fullName":"styled should have all valid HTML5 elements defined as properties","location":null,"status":"passed","title":"should have all valid HTML5 elements defined as properties"}],"endTime":1527640854040,"message":"","name":"/Users/bear/code/styled-components/src/constructors/test/styled.test.js","startTime":1527640853805,"status":"passed","summary":""}],"wasInterrupted":false}
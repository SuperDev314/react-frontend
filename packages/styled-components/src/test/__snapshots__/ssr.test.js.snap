// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ssr should add a nonce to the stylesheet if webpack nonce is detected in the global scope 1`] = `"<h1 class=\\"sc-b c\\">Hello SSR!</h1>"`;

exports[`ssr should add a nonce to the stylesheet if webpack nonce is detected in the global scope 2`] = `
"<style nonce=\\"foo\\" data-styled data-styled-version=\\"JEST_MOCK_VERSION\\">body{background:papayawhip;}
data-styled.g1[id=\\"sc-global-a\\"]{content:\\"sc-global-a,\\"}
.c{color:red;}
data-styled.g2[id=\\"sc-b\\"]{content:\\"c,\\"}
</style>"
`;

exports[`ssr should extract both global and local CSS 1`] = `"<h1 class=\\"sc-b c\\">Hello SSR!</h1>"`;

exports[`ssr should extract both global and local CSS 2`] = `
"<style data-styled data-styled-version=\\"JEST_MOCK_VERSION\\">body{background:papayawhip;}
data-styled.g1[id=\\"sc-global-a\\"]{content:\\"sc-global-a,\\"}
.c{color:red;}
data-styled.g2[id=\\"sc-b\\"]{content:\\"c,\\"}
</style>"
`;

exports[`ssr should extract the CSS in a simple case 1`] = `"<h1 class=\\"sc-a b\\">Hello SSR!</h1>"`;

exports[`ssr should extract the CSS in a simple case 2`] = `
"<style data-styled data-styled-version=\\"JEST_MOCK_VERSION\\">.b{color:red;}
data-styled.g1[id=\\"sc-a\\"]{content:\\"b,\\"}
</style>"
`;

exports[`ssr should handle errors while streaming 1`] = `[Invariant Violation: React.Children.only expected to receive a single React element child.]`;

exports[`ssr should interleave styles with rendered HTML when utilitizing streaming 1`] = `
"<style data-styled data-styled-version=\\"JEST_MOCK_VERSION\\">body{background:papayawhip;}
data-styled.g1[id=\\"sc-global-a\\"]{content:\\"sc-global-a,\\"}
.c{color:red;}
data-styled.g2[id=\\"sc-b\\"]{content:\\"c,\\"}
</style><h1 class=\\"sc-b c\\">Hello SSR!</h1>"
`;

exports[`ssr should render CSS in the order the components were defined, not rendered 1`] = `"<div><h2 class=\\"TWO a\\"></h2><h1 class=\\"ONE b\\"></h1></div>"`;

exports[`ssr should render CSS in the order the components were defined, not rendered 2`] = `
"<style data-styled data-styled-version=\\"JEST_MOCK_VERSION\\">.b{color:red;}
data-styled.g1[id=\\"ONE\\"]{content:\\"b,\\"}
.a{color:blue;}
data-styled.g2[id=\\"TWO\\"]{content:\\"a,\\"}
</style>"
`;

exports[`ssr should return a generated React style element 1`] = `
Object {
  "dangerouslySetInnerHTML": Object {
    "__html": "body{background:papayawhip;}
data-styled.g1[id=\\"sc-global-a\\"]{content:\\"sc-global-a,\\"}
.c{color:red;}
data-styled.g2[id=\\"sc-b\\"]{content:\\"c,\\"}
",
  },
  "data-styled": "",
  "data-styled-version": "JEST_MOCK_VERSION",
}
`;
